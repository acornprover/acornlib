{"goal":"Nat.0.suc = Nat.1","proof":[]}
{"goal":"Nat.1.range = List.singleton(Nat.0)","proof":["Nat.0.until(Nat.0.suc) = Nat.0.upto(Nat.0)","Nat.0.upto(Nat.0) = Nat.0.suc.range","Nat.0.until(Nat.0.suc) = List.singleton(Nat.0)"]}
{"goal":"Nat.0 - Nat.0 = Nat.0","proof":["-lib(int.int_base).Int.from_nat(Nat.0) != lib(int.int_base).sub_nat(Nat.0, Nat.0) or Nat.0 + Nat.0 = Nat.0","Nat.0 + Nat.0 != Nat.0 or Nat.0 - Nat.0 = Nat.0","Nat.0 + Nat.0 != Nat.0","-lib(int.int_base).Int.from_nat(Nat.0) = lib(int.int_base).sub_nat(Nat.0, Nat.0)"]}
{"goal":"mapped = List.singleton(a(Nat.0) * b(Nat.0))","proof":["let s0: Nat -> Real satisfy { forall(x0: Nat) { a(x0) * b(Nat.0 - x0) = s0(x0) } }","a(Nat.0) * b(Nat.0 - Nat.0) = s0(Nat.0)","map[Nat, Real](List.singleton(Nat.0), s0) = List.singleton(s0(Nat.0))"]}
{"goal":"sum[Real](mapped) = a(Nat.0) * b(Nat.0)","proof":["let s0: Nat -> Real satisfy { forall(x0: Nat) { a(x0) * b(Nat.0 - x0) = s0(x0) } }","a(Nat.0) * b(Nat.0 - Nat.0) = s0(Nat.0)","sum[Real](map[Nat, Real](Nat.1.range, s0)) = partial[Real](s0, Nat.1)","partial[Real](s0, Nat.1) = s0(Nat.0)"]}
{"goal":"cauchy_product_zero","proof":["sum[Real](map[Nat, Real](Nat.0.suc.range, cauchy_coefficient(a, b, Nat.0))) = cauchy_product(a, b, Nat.0)","a(Nat.0) * b(Nat.0 - Nat.0) = cauchy_coefficient(a, b, Nat.0, Nat.0)","sum[Real](map[Nat, Real](Nat.0.suc.range, cauchy_coefficient(a, b, Nat.0))) = partial[Real](cauchy_coefficient(a, b, Nat.0), Nat.0.suc)","partial[Real](cauchy_coefficient(a, b, Nat.0), Nat.1) = cauchy_coefficient(a, b, Nat.0, Nat.0)"]}
{"goal":"map[T, Real](List.nil[T], f) = List.nil[Real]","proof":["List.nil[T].map(f) = map[T, Real](List.nil[T], f)","List.nil[T].map(f) != List.nil[Real]","List.nil[T] != List.nil[T] or List.nil[T].map(f) = List.nil[Real]"]}
{"goal":"sum[Real](List.nil[Real]) = 0","proof":["List.nil[Real] != List.nil[Real] or sum[Real](List.nil[Real]) = 0"]}
{"goal":"p(List.nil[T])","proof":["sum[Real](map[T, Real](List.nil[T], f)) != 0 or p(List.nil[T])","sum[Real](map[T, Real](List.nil[T], f)) = 0","sum[Real](map[T, Real](List.nil[T], f)) != 0"]}
{"goal":"sum[Real](map[T, Real](tail, f)) = 0","proof":["let s0: List[T] -> T satisfy { forall(x0: List[T]) { f(s0(x0)) != 0 or not p(x0) or sum[Real](map[T, Real](x0, f)) = 0 } and forall(x1: T, x2: List[T]) { 0 = f(x1) or p(x2) } and forall(x3: List[T]) { sum[Real](map[T, Real](x3, f)) != 0 or p(x3) } }","f(s0(tail)) = 0","f(s0(tail)) != 0 or not p(tail) or sum[Real](map[T, Real](tail, f)) = 0","not p(tail) or sum[Real](map[T, Real](tail, f)) = 0"]}
{"goal":"map[T, Real](List.cons(head, tail), f) = List.cons(f(head), map[T, Real](tail, f))","proof":["List.cons(head, tail) != List.cons(head, tail) or List.cons(f(head), map[T, Real](tail, f)) = map[T, Real](List.cons(head, tail), f)"]}
{"goal":"sum[Real](List.cons(f(head), map[T, Real](tail, f))) = f(head) + sum[Real](map[T, Real](tail, f))","proof":["f(head) + sum[Real](map[T, Real](tail, f)) != sum[Real](map[T, Real](List.cons(head, tail), f))","List.cons(f(head), map[T, Real](tail, f)) != map[T, Real](List.cons(head, tail), f) or f(head) + sum[Real](map[T, Real](tail, f)) = sum[Real](map[T, Real](List.cons(head, tail), f))"]}
{"goal":"f(head) = 0","proof":["f(head) = 0"]}
{"goal":"sum[Real](List.cons(f(head), map[T, Real](tail, f))) = 0 + 0","proof":[]}
{"goal":"sum[Real](List.cons(f(head), map[T, Real](tail, f))) = 0","proof":["sum[Real](List.cons(f(head), map[T, Real](tail, f))) != 0 + 0 or sum[Real](List.cons(f(head), map[T, Real](tail, f))) - 0 = 0","sum[Real](List.cons(f(head), map[T, Real](tail, f))) - 0 != 0 or sum[Real](List.cons(f(head), map[T, Real](tail, f))) = 0","sum[Real](List.cons(f(head), map[T, Real](tail, f))) - 0 = 0","sum[Real](List.cons(f(head), map[T, Real](tail, f))) - 0 != 0"]}
{"goal":"sum[Real](map[T, Real](List.cons(head, tail), f)) = 0","proof":[]}
{"goal":"p(List.cons(head, tail))","proof":["let s0: T satisfy { f(s0) != 0 or sum[Real](map[T, Real](List.cons(head, tail), f)) = 0 }","f(s0) = 0","sum[Real](map[T, Real](List.cons(head, tail), f)) != 0 or p(List.cons(head, tail))"]}
{"goal":"sum_map_zero","proof":["let s0: List[T] -> T satisfy { forall(x0: List[T]) { f(s0(x0)) != 0 or not p(x0) or sum[Real](map[T, Real](x0, f)) = 0 } and forall(x1: T, x2: List[T]) { 0 = f(x1) or p(x2) } and forall(x3: List[T]) { sum[Real](map[T, Real](x3, f)) != 0 or p(x3) } }","f(s0(items)) = 0","let (s1: List[T] -> Bool -> T, s2: List[T] -> Bool -> List[T]) satisfy { forall(x4: List[T] -> Bool, x5: List[T]) { not x4(List.nil[T]) or x4(s2(x4)) or x4(x5) } and forall(x6: List[T] -> Bool, x7: List[T]) { not x6(List.cons(s1(x6), s2(x6))) or not x6(List.nil[T]) or x6(x7) } }","not p(s2(p)) or p(List.cons(s1(p), s2(p)))","f(s0(items)) != 0 or not p(items) or sum[Real](map[T, Real](items, f)) = 0","not p(items) or sum[Real](map[T, Real](items, f)) = 0","not p(items)","not p(List.cons(s1(p), s2(p))) or not p(List.nil[T]) or p(items)","not p(List.nil[T]) or p(s2(p)) or p(items)","p(s2(p)) or p(items)","p(s2(p))","not p(List.cons(s1(p), s2(p))) or p(items)","not p(List.cons(s1(p), s2(p)))"]}
{"goal":"cauchy_coefficient(a, b, n)(k) = a(k) * b(n - k)","proof":["a(k) * b(n - k) = cauchy_coefficient(a, b, n, k)"]}
{"goal":"a(k) = 0","proof":["constant(0, k) = a(k)","constant(0, k) != 0","constant(0, k) = 0"]}
{"goal":"0 * b(n - k) = 0","proof":["n - k = lib(nat.nat_base).bounded_sub(n, k)","0 * b(lib(nat.nat_base).bounded_sub(n, k)) != 0","0 * b(lib(nat.nat_base).bounded_sub(n, k)) = 0"]}
{"goal":"cauchy_coefficient_zero_left","proof":[]}
{"goal":"cauchy_coefficient(a, b, n)(k) = 0","proof":["cauchy_coefficient(constant[Nat, Real](0), b, n, k) = 0"]}
{"goal":"constant[Nat, Real](0)(k) = 0","proof":["constant(0, k) = 0"]}
{"goal":"cauchy_coefficient_zero_left_fn","proof":["let s0: Nat satisfy { cauchy_coefficient(constant[Nat, Real](0), b, n, s0) != constant(0, s0) }","constant(0, s0) = 0","cauchy_coefficient(constant[Nat, Real](0), b, n, s0) != 0","cauchy_coefficient(constant[Nat, Real](0), b, n, s0) = 0"]}
{"goal":"cauchy_coefficient(a, b, n)(k) = a(k) * b(n - k)","proof":["a(k) * b(n - k) = cauchy_coefficient(a, b, n, k)"]}
{"goal":"b(n - k) = 0","proof":["constant(0, n - k) = b(n - k)","let s0: Nat -> Real satisfy { true }","let s1: Nat satisfy { true }","cauchy_coefficient(constant[Nat, Real](0), s0, s1, n - k) = constant(0, n - k)","cauchy_coefficient(constant[Nat, Real](0), s0, s1, n - k) = 0","constant(0, n - k) != 0"]}
{"goal":"a(k) * 0 = 0","proof":["a(k) * 0 = 0 * a(k)","0 * a(k) != 0","0 * a(k) = 0"]}
{"goal":"cauchy_coefficient_zero_right","proof":[]}
{"goal":"cauchy_coefficient(a, b, n)(k) = 0","proof":["cauchy_coefficient(a, constant[Nat, Real](0), n, k) = 0"]}
{"goal":"constant[Nat, Real](0)(k) = 0","proof":["let s0: Nat -> Real satisfy { true }","let s1: Nat satisfy { true }","cauchy_coefficient(constant[Nat, Real](0), s0, s1, k) = constant(0, k)","cauchy_coefficient(constant[Nat, Real](0), s0, s1, k) = 0"]}
{"goal":"cauchy_coefficient_zero_right_fn","proof":["let s0: Nat satisfy { cauchy_coefficient(a, constant[Nat, Real](0), n, s0) != constant(0, s0) }","constant(0, s0) = 0","cauchy_coefficient(a, constant[Nat, Real](0), n, s0) != 0","cauchy_coefficient(a, constant[Nat, Real](0), n, s0) = 0"]}
{"goal":"left_list.length = map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)).length","proof":["reverse[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))).length = map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)).length"]}
{"goal":"map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)).length = n.suc.range.length","proof":["map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)).length = n.suc.range.length"]}
{"goal":"n.suc.range.length = n.suc","proof":["n.suc.range.length = n.suc"]}
{"goal":"right_list.length = map[Nat, Real](n.suc.range, cauchy_coefficient(b, a, n)).length","proof":["map[Nat, Real](n.suc.range, cauchy_coefficient(b, a, n)) != right_list"]}
{"goal":"map[Nat, Real](n.suc.range, cauchy_coefficient(b, a, n)).length = n.suc.range.length","proof":["map[Nat, Real](n.suc.range, cauchy_coefficient(b, a, n)).length = n.suc.range.length"]}
{"goal":"left_list.length = right_list.length","proof":[]}
{"goal":"idx < n.suc","proof":[]}
{"goal":"mapped.length = n.suc","proof":[]}
{"goal":"left_list.get_idx(idx) = mapped.get_idx(mapped.length - Nat.1 - idx)","proof":["idx < mapped.length","reverse[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))).get_idx(idx) != mapped.get_idx(mapped.length - Nat.1 - idx)","mapped.get_idx(mapped.length - Nat.1 - idx) = reverse[Real](mapped).get_idx(idx)","mapped.get_idx(mapped.length - Nat.1 - idx) != reverse[Real](mapped).get_idx(idx)"]}
{"goal":"mapped.length - Nat.1 - idx = n - idx","proof":["n.suc - Nat.1 - idx != n - idx","n.suc - Nat.1 != n","n.suc - Nat.1 = n"]}
{"goal":"n - idx <= n","proof":["not n < idx or n.suc < idx or n.suc = idx","lib(nat.nat_base).bounded_sub(n, idx) + idx = n or n < idx","lib(nat.nat_base).bounded_sub(n, idx) + idx != n or lib(nat.nat_base).bounded_sub(n, idx) <= n","n - idx = lib(nat.nat_base).bounded_sub(n, idx)","not lib(nat.nat_base).bounded_sub(n, idx) <= n","not n.suc < idx or not idx < n.suc","not idx < n.suc or n.suc != idx","n.suc != idx","lib(nat.nat_base).bounded_sub(n, idx) + idx != n","not n.suc < idx","n < idx","not n < idx"]}
{"goal":"n < n.suc","proof":["not n ∈ n.suc.range or not n >= n.suc","n.suc <= n = n >= n.suc","n.suc <= n or n < n.suc","n.suc <= n","n >= n.suc","n ∈ n.suc.range"]}
{"goal":"n - idx < n.suc","proof":["not n - idx <= n or n - idx < n or n - idx = n","not n - idx < n or n - idx < n.suc","not n - idx < n","n - idx = n"]}
{"goal":"mapped.get_idx(n - idx) = Option.some(cauchy_coefficient(a, b, n)(n - idx))","proof":["map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)).get_idx(n - idx) != Option.some(cauchy_coefficient(a, b, n, n - idx))"]}
{"goal":"cauchy_coefficient(a, b, n)(n - idx) = a(n - idx) * b(n - (n - idx))","proof":["a(n - idx) * b(n - (n - idx)) = cauchy_coefficient(a, b, n, n - idx)"]}
{"goal":"n - (n - idx) = idx","proof":["not n < idx or n.suc < idx or n.suc = idx","lib(nat.nat_base).bounded_sub(n, idx) + idx = n or n < idx","idx + (n - idx) != n or n - (n - idx) = idx","n - idx = lib(nat.nat_base).bounded_sub(n, idx)","not n.suc < idx or not idx < n.suc","idx + lib(nat.nat_base).bounded_sub(n, idx) = lib(nat.nat_base).bounded_sub(n, idx) + idx","idx + (n - idx) != n","not idx < n.suc or n.suc != idx","n.suc != idx","idx + lib(nat.nat_base).bounded_sub(n, idx) != n","not n.suc < idx","lib(nat.nat_base).bounded_sub(n, idx) + idx != n","not n < idx","n < idx"]}
{"goal":"cauchy_coefficient(a, b, n)(n - idx) = a(n - idx) * b(idx)","proof":["a(n - idx) * b(n - (n - idx)) != cauchy_coefficient(a, b, n, n - idx)"]}
{"goal":"left_list.get_idx(idx) = Option.some(a(n - idx) * b(idx))","proof":[]}
{"goal":"a(n - idx) * b(idx) = b(idx) * a(n - idx)","proof":["b(idx) * a(n - idx) = a(n - idx) * b(idx)"]}
{"goal":"right_list.get_idx(idx) = Option.some(cauchy_coefficient(b, a, n)(idx))","proof":["map[Nat, Real](n.suc.range, cauchy_coefficient(b, a, n)).get_idx(idx) != Option.some(cauchy_coefficient(b, a, n, idx))"]}
{"goal":"cauchy_coefficient(b, a, n)(idx) = b(idx) * a(n - idx)","proof":["b(idx) * a(n - idx) = cauchy_coefficient(b, a, n, idx)"]}
{"goal":"left_list.get_idx(idx) = Option.some(b(idx) * a(n - idx))","proof":[]}
{"goal":"left_list.get_idx(idx) = right_list.get_idx(idx)","proof":[]}
{"goal":"left_list = right_list","proof":["let s0: Nat satisfy { right_list.length != left_list.length or s0 < left_list.length or right_list = left_list and (right_list.get_idx(s0) != left_list.get_idx(s0) or right_list.length != left_list.length or right_list = left_list) }","s0 < left_list.length","not s0 < left_list.length or right_list.get_idx(s0) = left_list.get_idx(s0)","right_list.get_idx(s0) != left_list.get_idx(s0)","right_list.get_idx(s0) = left_list.get_idx(s0)"]}
{"goal":"cauchy_reverse_map_eq","proof":[]}
{"goal":"cauchy_product(a, b, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = cauchy_product(a, b, n)"]}
{"goal":"cauchy_product(b, a, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(b, a, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(b, a, n))) = cauchy_product(b, a, n)"]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = sum[Real](reverse[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))))","proof":["sum[Real](reverse[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))"]}
{"goal":"reverse[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = map[Nat, Real](n.suc.range, cauchy_coefficient(b, a, n))","proof":[]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(b, a, n)))","proof":["sum[Real](reverse[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))) != sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))"]}
{"goal":"cauchy_product_comm","proof":[]}
{"goal":"cauchy_coefficient(a, b, n) = constant[Nat, Real](0)","proof":["let s0: Nat satisfy { cauchy_coefficient(a, b, n, s0) != constant(0, s0) }","cauchy_coefficient(constant[Nat, Real](0), b, n, s0) = constant(0, s0)"]}
{"goal":"cauchy_coefficient(a, b, n)(k) = 0","proof":["cauchy_coefficient(a, b, n, k) = constant(0, k)","constant(0, k) != 0","let s0: Nat -> Real satisfy { true }","let s1: Nat satisfy { true }","cauchy_coefficient(s0, constant[Nat, Real](0), s1, k) = constant(0, k)","cauchy_coefficient(s0, constant[Nat, Real](0), s1, k) = 0"]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = 0","proof":["let s0: (List[Nat], Nat -> Real) -> Nat satisfy { forall(x0: Nat -> Real, x1: List[Nat]) { x0(s0(x1, x0)) != 0 or sum[Real](map[Nat, Real](x1, x0)) = 0 } }","cauchy_coefficient(a, b, n, s0(n.suc.range, cauchy_coefficient(a, b, n))) = 0","cauchy_coefficient(a, b, n, s0(n.suc.range, cauchy_coefficient(a, b, n))) != 0 or sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = 0"]}
{"goal":"cauchy_product(a, b, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = cauchy_product(a, b, n)"]}
{"goal":"cauchy_product(a, b, n) = 0","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) != cauchy_product(a, b, n)"]}
{"goal":"cauchy_product_zero_left","proof":["cauchy_product(a, b, n) != 0"]}
{"goal":"cauchy_coefficient(a, b, n) = constant[Nat, Real](0)","proof":["let s0: Nat satisfy { cauchy_coefficient(a, b, n, s0) != constant(0, s0) }","cauchy_coefficient(a, constant[Nat, Real](0), n, s0) = constant(0, s0)"]}
{"goal":"cauchy_coefficient(a, b, n)(k) = 0","proof":["cauchy_coefficient(a, constant[Nat, Real](0), n, k) = 0"]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = 0","proof":["let s0: (List[Nat], Nat -> Real) -> Nat satisfy { forall(x0: Nat -> Real, x1: List[Nat]) { x0(s0(x1, x0)) != 0 or sum[Real](map[Nat, Real](x1, x0)) = 0 } }","cauchy_coefficient(a, b, n, s0(n.suc.range, cauchy_coefficient(a, b, n))) = 0","cauchy_coefficient(a, b, n, s0(n.suc.range, cauchy_coefficient(a, b, n))) != 0 or sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = 0"]}
{"goal":"cauchy_product(a, b, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = cauchy_product(a, b, n)"]}
{"goal":"cauchy_product(a, b, n) = 0","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) != cauchy_product(a, b, n)"]}
{"goal":"cauchy_product_zero_right","proof":["cauchy_product(a, b, n) != 0"]}
{"goal":"cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n)(k) = mul_fn[Nat, Real](c, a)(k) * b(n - k)","proof":["mul_fn(c, a, k) * b(n - k) = cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n, k)"]}
{"goal":"mul_fn[Nat, Real](c, a)(k) = c * a(k)","proof":["c * a(k) = mul_fn(c, a, k)"]}
{"goal":"cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n)(k) = c * a(k) * b(n - k)","proof":["mul_fn(c, a, k) * b(n - k) != cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n, k)"]}
{"goal":"c * a(k) * b(n - k) = c * (a(k) * b(n - k))","proof":["c * (a(k) * b(n - k)) = c * a(k) * b(n - k)"]}
{"goal":"cauchy_coefficient(a, b, n)(k) = a(k) * b(n - k)","proof":["a(k) * b(n - k) = cauchy_coefficient(a, b, n, k)"]}
{"goal":"c * (a(k) * b(n - k)) = c * cauchy_coefficient(a, b, n)(k)","proof":["a(k) * b(n - k) != cauchy_coefficient(a, b, n, k)"]}
{"goal":"cauchy_coefficient_scalar_left","proof":[]}
{"goal":"cauchy_product(mul_fn[Nat, Real](c, a), b, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n))) = cauchy_product(mul_fn[Nat, Real](c, a), b, n)"]}
{"goal":"cauchy_product(a, b, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = cauchy_product(a, b, n)"]}
{"goal":"cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n)(k) = c * cauchy_coefficient(a, b, n)(k)","proof":["c * cauchy_coefficient(a, b, n, k) = cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n, k)"]}
{"goal":"scalar_mul(c)(cauchy_coefficient(a, b, n)(k)) = c * cauchy_coefficient(a, b, n)(k)","proof":["c * cauchy_coefficient(a, b, n, k) = scalar_mul(c, cauchy_coefficient(a, b, n, k))"]}
{"goal":"cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n) = compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n))","proof":["let s0: Nat satisfy { compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n), s0) != cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n, s0) }","c * cauchy_coefficient(a, b, n, s0) = scalar_mul(c, cauchy_coefficient(a, b, n, s0))","c * cauchy_coefficient(a, b, n, s0) = cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n, s0)","compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n), s0) = scalar_mul(c, cauchy_coefficient(a, b, n, s0))","scalar_mul(c, cauchy_coefficient(a, b, n, s0)) != cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n, s0)"]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(mul_fn[Nat, Real](c, a), b, n))) = sum[Real](map[Nat, Real](n.suc.range, compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n))))","proof":[]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n)))) = sum[Real](map[Real, Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)), scalar_mul(c)))","proof":["map[Nat, Real](n.suc.range, compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n))) != map[Real, Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)), scalar_mul(c))","map[Nat, Real](n.suc.range, compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n))) = map[Real, Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)), scalar_mul(c))"]}
{"goal":"sum[Real](map[Real, Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)), scalar_mul(c))) = c * sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))","proof":["sum[Real](map[Real, Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)), scalar_mul(c))) = c * sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))"]}
{"goal":"cauchy_product_scalar_left","proof":[]}
{"goal":"cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n)(k) = a(k) * mul_fn[Nat, Real](c, b)(n - k)","proof":["a(k) * mul_fn(c, b, n - k) = cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n, k)"]}
{"goal":"mul_fn[Nat, Real](c, b)(n - k) = c * b(n - k)","proof":["c * b(n - k) = mul_fn(c, b, n - k)"]}
{"goal":"cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n)(k) = a(k) * (c * b(n - k))","proof":["a(k) * mul_fn(c, b, n - k) != cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n, k)"]}
{"goal":"a(k) * (c * b(n - k)) = a(k) * (b(n - k) * c)","proof":["b(n - k) * c != c * b(n - k)","b(n - k) * c = c * b(n - k)"]}
{"goal":"a(k) * (b(n - k) * c) = a(k) * b(n - k) * c","proof":["a(k) * (b(n - k) * c) = a(k) * b(n - k) * c"]}
{"goal":"a(k) * b(n - k) * c = c * (a(k) * b(n - k))","proof":["c * (a(k) * b(n - k)) = a(k) * b(n - k) * c"]}
{"goal":"cauchy_coefficient(a, b, n)(k) = a(k) * b(n - k)","proof":["a(k) * b(n - k) = cauchy_coefficient(a, b, n, k)"]}
{"goal":"c * (a(k) * b(n - k)) = c * cauchy_coefficient(a, b, n)(k)","proof":["a(k) * b(n - k) != cauchy_coefficient(a, b, n, k)"]}
{"goal":"cauchy_coefficient_scalar_right","proof":[]}
{"goal":"cauchy_product(a, mul_fn[Nat, Real](c, b), n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n))) = cauchy_product(a, mul_fn[Nat, Real](c, b), n)"]}
{"goal":"cauchy_product(a, b, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = cauchy_product(a, b, n)"]}
{"goal":"cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n)(k) = c * cauchy_coefficient(a, b, n)(k)","proof":["c * cauchy_coefficient(a, b, n, k) = cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n, k)"]}
{"goal":"scalar_mul(c)(cauchy_coefficient(a, b, n)(k)) = c * cauchy_coefficient(a, b, n)(k)","proof":["c * cauchy_coefficient(a, b, n, k) = scalar_mul(c, cauchy_coefficient(a, b, n, k))"]}
{"goal":"cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n) = compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n))","proof":["let s0: Nat satisfy { compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n), s0) != cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n, s0) }","c * cauchy_coefficient(a, b, n, s0) = scalar_mul(c, cauchy_coefficient(a, b, n, s0))","c * cauchy_coefficient(a, b, n, s0) = cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n, s0)","compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n), s0) = scalar_mul(c, cauchy_coefficient(a, b, n, s0))","scalar_mul(c, cauchy_coefficient(a, b, n, s0)) != cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n, s0)"]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, mul_fn[Nat, Real](c, b), n))) = sum[Real](map[Nat, Real](n.suc.range, compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n))))","proof":[]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n)))) = sum[Real](map[Real, Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)), scalar_mul(c)))","proof":["map[Nat, Real](n.suc.range, compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n))) != map[Real, Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)), scalar_mul(c))","map[Nat, Real](n.suc.range, compose[Nat, Real, Real](scalar_mul(c), cauchy_coefficient(a, b, n))) = map[Real, Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)), scalar_mul(c))"]}
{"goal":"sum[Real](map[Real, Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)), scalar_mul(c))) = c * sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))","proof":["sum[Real](map[Real, Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)), scalar_mul(c))) = c * sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))"]}
{"goal":"cauchy_product_scalar_right","proof":[]}
{"goal":"cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n)(k) = add_fn[Nat, Real](a, aa)(k) * b(n - k)","proof":["add_fn[Nat, Real](a, aa, k) * b(n - k) = cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n, k)"]}
{"goal":"add_fn[Nat, Real](a, aa)(k) = a(k) + aa(k)","proof":["a(k) + aa(k) = add_fn[Nat, Real](a, aa, k)"]}
{"goal":"cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n)(k) = (a(k) + aa(k)) * b(n - k)","proof":["add_fn[Nat, Real](a, aa, k) * b(n - k) != cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n, k)"]}
{"goal":"(a(k) + aa(k)) * b(n - k) = a(k) * b(n - k) + aa(k) * b(n - k)","proof":["a(k) * b(n - k) + aa(k) * b(n - k) = (a(k) + aa(k)) * b(n - k)"]}
{"goal":"cauchy_coefficient(a, b, n)(k) = a(k) * b(n - k)","proof":["a(k) * b(n - k) = cauchy_coefficient(a, b, n, k)"]}
{"goal":"cauchy_coefficient(aa, b, n)(k) = aa(k) * b(n - k)","proof":["aa(k) * b(n - k) = cauchy_coefficient(aa, b, n, k)"]}
{"goal":"a(k) * b(n - k) + aa(k) * b(n - k) = cauchy_coefficient(a, b, n)(k) + cauchy_coefficient(aa, b, n)(k)","proof":[]}
{"goal":"cauchy_coefficient_add_left","proof":[]}
{"goal":"cauchy_product(add_fn[Nat, Real](a, aa), b, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n))) = cauchy_product(add_fn[Nat, Real](a, aa), b, n)"]}
{"goal":"cauchy_product(a, b, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = cauchy_product(a, b, n)"]}
{"goal":"cauchy_product(aa, b, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(aa, b, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(aa, b, n))) = cauchy_product(aa, b, n)"]}
{"goal":"cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n)(k) = cauchy_coefficient(a, b, n)(k) + cauchy_coefficient(aa, b, n)(k)","proof":["cauchy_coefficient(a, b, n, k) + cauchy_coefficient(aa, b, n, k) = cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n, k)"]}
{"goal":"add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(aa, b, n))(k) = cauchy_coefficient(a, b, n)(k) + cauchy_coefficient(aa, b, n)(k)","proof":["cauchy_coefficient(a, b, n, k) + cauchy_coefficient(aa, b, n, k) = add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(aa, b, n), k)"]}
{"goal":"cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n) = add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(aa, b, n))","proof":["let s0: Nat satisfy { add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(aa, b, n), s0) != cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n, s0) }","cauchy_coefficient(a, b, n, s0) + cauchy_coefficient(aa, b, n, s0) = add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(aa, b, n), s0)","cauchy_coefficient(a, b, n, s0) + cauchy_coefficient(aa, b, n, s0) = cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n, s0)"]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(add_fn[Nat, Real](a, aa), b, n))) = sum[Real](map[Nat, Real](n.suc.range, add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(aa, b, n))))","proof":[]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(aa, b, n)))) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) + sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(aa, b, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) + sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(aa, b, n))) = sum[Real](map[Nat, Real](n.suc.range, add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(aa, b, n))))"]}
{"goal":"cauchy_product_add_left","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) + sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(aa, b, n))) = sum[Real](map[Nat, Real](n.suc.range, add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(aa, b, n))))"]}
{"goal":"cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n)(k) = a(k) * add_fn[Nat, Real](b, bb)(n - k)","proof":["a(k) * add_fn[Nat, Real](b, bb, n - k) = cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n, k)"]}
{"goal":"add_fn[Nat, Real](b, bb)(n - k) = b(n - k) + bb(n - k)","proof":["b(n - k) + bb(n - k) = add_fn[Nat, Real](b, bb, n - k)"]}
{"goal":"cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n)(k) = a(k) * (b(n - k) + bb(n - k))","proof":["a(k) * add_fn[Nat, Real](b, bb, n - k) != cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n, k)"]}
{"goal":"a(k) * (b(n - k) + bb(n - k)) = a(k) * b(n - k) + a(k) * bb(n - k)","proof":["a(k) * b(n - k) + a(k) * bb(n - k) = a(k) * (b(n - k) + bb(n - k))"]}
{"goal":"cauchy_coefficient(a, b, n)(k) = a(k) * b(n - k)","proof":["a(k) * b(n - k) = cauchy_coefficient(a, b, n, k)"]}
{"goal":"cauchy_coefficient(a, bb, n)(k) = a(k) * bb(n - k)","proof":["a(k) * bb(n - k) = cauchy_coefficient(a, bb, n, k)"]}
{"goal":"a(k) * b(n - k) + a(k) * bb(n - k) = cauchy_coefficient(a, b, n)(k) + cauchy_coefficient(a, bb, n)(k)","proof":[]}
{"goal":"cauchy_coefficient_add_right","proof":[]}
{"goal":"cauchy_product(a, add_fn[Nat, Real](b, bb), n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n))) = cauchy_product(a, add_fn[Nat, Real](b, bb), n)"]}
{"goal":"cauchy_product(a, b, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) = cauchy_product(a, b, n)"]}
{"goal":"cauchy_product(a, bb, n) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, bb, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, bb, n))) = cauchy_product(a, bb, n)"]}
{"goal":"cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n)(k) = cauchy_coefficient(a, b, n)(k) + cauchy_coefficient(a, bb, n)(k)","proof":["cauchy_coefficient(a, b, n, k) + cauchy_coefficient(a, bb, n, k) = cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n, k)"]}
{"goal":"add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(a, bb, n))(k) = cauchy_coefficient(a, b, n)(k) + cauchy_coefficient(a, bb, n)(k)","proof":["cauchy_coefficient(a, b, n, k) + cauchy_coefficient(a, bb, n, k) = add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(a, bb, n), k)"]}
{"goal":"cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n) = add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(a, bb, n))","proof":["let s0: Nat satisfy { add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(a, bb, n), s0) != cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n, s0) }","cauchy_coefficient(a, b, n, s0) + cauchy_coefficient(a, bb, n, s0) = add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(a, bb, n), s0)","cauchy_coefficient(a, b, n, s0) + cauchy_coefficient(a, bb, n, s0) = cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n, s0)"]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, add_fn[Nat, Real](b, bb), n))) = sum[Real](map[Nat, Real](n.suc.range, add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(a, bb, n))))","proof":[]}
{"goal":"sum[Real](map[Nat, Real](n.suc.range, add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(a, bb, n)))) = sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) + sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, bb, n)))","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) + sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, bb, n))) = sum[Real](map[Nat, Real](n.suc.range, add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(a, bb, n))))"]}
{"goal":"cauchy_product_add_right","proof":["sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, b, n))) + sum[Real](map[Nat, Real](n.suc.range, cauchy_coefficient(a, bb, n))) = sum[Real](map[Nat, Real](n.suc.range, add_fn[Nat, Real](cauchy_coefficient(a, b, n), cauchy_coefficient(a, bb, n))))"]}
{"goal":"c(k) = cauchy_product(a, b, k)","proof":["cauchy_seq(a, b, k) = c(k)","cauchy_seq(a, b, k) = cauchy_product(a, b, k)"]}
{"goal":"cauchy_product(a, b, k) = 0","proof":["cauchy_product(b, a, k) = cauchy_product(a, b, k)","cauchy_product(b, a, k) != 0","cauchy_product(b, constant[Nat, Real](0), k) = 0"]}
{"goal":"c(k) = 0","proof":["cauchy_product(a, b, k) != c(k)"]}
{"goal":"constant[Nat, Real](0)(k) = 0","proof":["let s0: Nat -> Real satisfy { true }","let s1: Nat satisfy { true }","cauchy_coefficient(s0, constant[Nat, Real](0), s1, k) = constant(0, k)","cauchy_coefficient(s0, constant[Nat, Real](0), s1, k) = 0"]}
{"goal":"c = constant[Nat, Real](0)","proof":["let s0: Nat satisfy { constant(0, s0) != c(s0) }","constant(0, s0) = 0","c(s0) != 0","cauchy_seq(a, b, s0) = c(s0)","cauchy_seq(a, b, s0) = cauchy_product(a, b, s0)","cauchy_product(constant[Nat, Real](0), b, s0) = 0","cauchy_seq(a, b, s0) != 0","cauchy_product(a, b, s0) != 0"]}
{"goal":"partial[Real](c, n) = sum[Real](map[Nat, Real](n.range, c))","proof":["sum[Real](map[Nat, Real](n.range, c)) = partial[Real](c, n)"]}
{"goal":"partial[Real](c, n) = sum[Real](map[Nat, Real](n.range, constant[Nat, Real](0)))","proof":["sum[Real](map[Nat, Real](n.range, c)) != partial[Real](c, n)"]}
{"goal":"constant[Nat, Real](0)(k) = 0","proof":["constant(0, k) = 0"]}
{"goal":"sum[Real](map[Nat, Real](n.range, constant[Nat, Real](0))) = 0","proof":["let s0: (List[Nat], Nat -> Real) -> Nat satisfy { forall(x0: Nat -> Real, x1: List[Nat]) { x0(s0(x1, x0)) != 0 or sum[Real](map[Nat, Real](x1, x0)) = 0 } }","constant(0, s0(n.range, constant[Nat, Real](0))) = 0","constant(0, s0(n.range, constant[Nat, Real](0))) != 0 or sum[Real](map[Nat, Real](n.range, constant[Nat, Real](0))) = 0"]}
{"goal":"partial[Real](c, n) = 0","proof":["sum[Real](map[Nat, Real](n.range, constant[Nat, Real](0))) != partial[Real](c, n)"]}
{"goal":"partial_cauchy_zero_left","proof":[]}
{"goal":"c(k) = cauchy_product(a, b, k)","proof":["cauchy_seq(a, b, k) = c(k)","cauchy_seq(a, b, k) = cauchy_product(a, b, k)"]}
{"goal":"cauchy_product(a, b, k) = 0","proof":["cauchy_product(a, constant[Nat, Real](0), k) = 0"]}
{"goal":"c(k) = 0","proof":["cauchy_product(a, b, k) != c(k)"]}
{"goal":"constant[Nat, Real](0)(k) = 0","proof":["let s0: Nat -> Real satisfy { true }","let s1: Nat satisfy { true }","cauchy_coefficient(s0, constant[Nat, Real](0), s1, k) = constant(0, k)","cauchy_coefficient(s0, constant[Nat, Real](0), s1, k) = 0"]}
{"goal":"c = constant[Nat, Real](0)","proof":["let s0: Nat satisfy { constant(0, s0) != c(s0) }","constant(0, s0) = 0","c(s0) != 0","cauchy_seq(a, b, s0) = c(s0)","cauchy_seq(a, b, s0) = cauchy_product(a, b, s0)","cauchy_product(a, constant[Nat, Real](0), s0) = 0","cauchy_seq(a, b, s0) != 0","cauchy_product(a, b, s0) != 0"]}
{"goal":"partial[Real](c, n) = sum[Real](map[Nat, Real](n.range, c))","proof":["sum[Real](map[Nat, Real](n.range, c)) = partial[Real](c, n)"]}
{"goal":"partial[Real](c, n) = sum[Real](map[Nat, Real](n.range, constant[Nat, Real](0)))","proof":["sum[Real](map[Nat, Real](n.range, c)) != partial[Real](c, n)"]}
{"goal":"constant[Nat, Real](0)(k) = 0","proof":["constant(0, k) = 0"]}
{"goal":"sum[Real](map[Nat, Real](n.range, constant[Nat, Real](0))) = 0","proof":["let s0: (List[Nat], Nat -> Real) -> Nat satisfy { forall(x0: Nat -> Real, x1: List[Nat]) { x0(s0(x1, x0)) != 0 or sum[Real](map[Nat, Real](x1, x0)) = 0 } }","constant(0, s0(n.range, constant[Nat, Real](0))) = 0","constant(0, s0(n.range, constant[Nat, Real](0))) != 0 or sum[Real](map[Nat, Real](n.range, constant[Nat, Real](0))) = 0"]}
{"goal":"partial[Real](c, n) = 0","proof":["sum[Real](map[Nat, Real](n.range, constant[Nat, Real](0))) != partial[Real](c, n)"]}
{"goal":"partial_cauchy_zero_right","proof":[]}
{"goal":"cauchy_seq(add_fn[Nat, Real](a, aa), b)(k) = cauchy_product(add_fn[Nat, Real](a, aa), b, k)","proof":["cauchy_seq(add_fn[Nat, Real](a, aa), b, k) = cauchy_product(add_fn[Nat, Real](a, aa), b, k)"]}
{"goal":"cauchy_product(add_fn[Nat, Real](a, aa), b, k) = cauchy_product(a, b, k) + cauchy_product(aa, b, k)","proof":["cauchy_product(a, b, k) + cauchy_product(aa, b, k) = cauchy_product(add_fn[Nat, Real](a, aa), b, k)"]}
{"goal":"cauchy_seq(a, b)(k) = cauchy_product(a, b, k)","proof":["cauchy_seq(a, b, k) = cauchy_product(a, b, k)"]}
{"goal":"cauchy_seq(aa, b)(k) = cauchy_product(aa, b, k)","proof":["cauchy_seq(aa, b, k) = cauchy_product(aa, b, k)"]}
{"goal":"cauchy_seq(add_fn[Nat, Real](a, aa), b)(k) = cauchy_seq(a, b)(k) + cauchy_seq(aa, b)(k)","proof":[]}
{"goal":"add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(aa, b))(k) = cauchy_seq(a, b)(k) + cauchy_seq(aa, b)(k)","proof":["cauchy_seq(a, b, k) + cauchy_seq(aa, b, k) = add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(aa, b), k)"]}
{"goal":"cauchy_seq(add_fn[Nat, Real](a, aa), b) = add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(aa, b))","proof":["let s0: Nat satisfy { add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(aa, b), s0) != cauchy_seq(add_fn[Nat, Real](a, aa), b, s0) }","cauchy_seq(a, b, s0) + cauchy_seq(aa, b, s0) = add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(aa, b), s0)","cauchy_product(a, b, s0) + cauchy_product(aa, b, s0) = cauchy_product(add_fn[Nat, Real](a, aa), b, s0)","let s1: Nat -> Real satisfy { true }","let s2: Nat satisfy { true }","cauchy_seq(add_fn[Nat, Real](a, aa), b, s0) = cauchy_product(add_fn[Nat, Real](a, aa), b, s0)","cauchy_seq(s1, s1, s2) = cauchy_product(s1, s1, s2)","cauchy_seq = cauchy_product"]}
{"goal":"partial[Real](cauchy_seq(add_fn[Nat, Real](a, aa), b), n) = partial[Real](add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(aa, b)), n)","proof":["add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(aa, b)) != cauchy_seq(add_fn[Nat, Real](a, aa), b)"]}
{"goal":"partial[Real](add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(aa, b)), n) = partial[Real](cauchy_seq(a, b), n) + partial[Real](cauchy_seq(aa, b), n)","proof":["partial[Real](cauchy_seq(a, b), n) + partial[Real](cauchy_seq(aa, b), n) = partial[Real](add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(aa, b)), n)"]}
{"goal":"partial_cauchy_add_left","proof":["partial[Real](cauchy_seq(a, b), n) + partial[Real](cauchy_seq(aa, b), n) != partial[Real](add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(aa, b)), n)"]}
{"goal":"cauchy_seq(a, add_fn[Nat, Real](b, bb))(k) = cauchy_product(a, add_fn[Nat, Real](b, bb), k)","proof":["cauchy_seq(a, add_fn[Nat, Real](b, bb), k) = cauchy_product(a, add_fn[Nat, Real](b, bb), k)"]}
{"goal":"cauchy_product(a, add_fn[Nat, Real](b, bb), k) = cauchy_product(a, b, k) + cauchy_product(a, bb, k)","proof":["cauchy_product(a, b, k) + cauchy_product(a, bb, k) = cauchy_product(a, add_fn[Nat, Real](b, bb), k)"]}
{"goal":"cauchy_seq(a, b)(k) = cauchy_product(a, b, k)","proof":["cauchy_seq(a, b, k) = cauchy_product(a, b, k)"]}
{"goal":"cauchy_seq(a, bb)(k) = cauchy_product(a, bb, k)","proof":["cauchy_seq(a, bb, k) = cauchy_product(a, bb, k)"]}
{"goal":"cauchy_seq(a, add_fn[Nat, Real](b, bb))(k) = cauchy_seq(a, b)(k) + cauchy_seq(a, bb)(k)","proof":[]}
{"goal":"add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(a, bb))(k) = cauchy_seq(a, b)(k) + cauchy_seq(a, bb)(k)","proof":["cauchy_seq(a, b, k) + cauchy_seq(a, bb, k) = add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(a, bb), k)"]}
{"goal":"cauchy_seq(a, add_fn[Nat, Real](b, bb)) = add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(a, bb))","proof":["let s0: Nat satisfy { add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(a, bb), s0) != cauchy_seq(a, add_fn[Nat, Real](b, bb), s0) }","cauchy_seq(a, b, s0) + cauchy_seq(a, bb, s0) = add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(a, bb), s0)","cauchy_product(a, b, s0) + cauchy_product(a, bb, s0) = cauchy_product(a, add_fn[Nat, Real](b, bb), s0)","let s1: Nat -> Real satisfy { true }","let s2: Nat satisfy { true }","cauchy_seq(a, add_fn[Nat, Real](b, bb), s0) = cauchy_product(a, add_fn[Nat, Real](b, bb), s0)","cauchy_seq(s1, s1, s2) = cauchy_product(s1, s1, s2)","cauchy_seq = cauchy_product"]}
{"goal":"partial[Real](cauchy_seq(a, add_fn[Nat, Real](b, bb)), n) = partial[Real](add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(a, bb)), n)","proof":["add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(a, bb)) != cauchy_seq(a, add_fn[Nat, Real](b, bb))"]}
{"goal":"partial[Real](add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(a, bb)), n) = partial[Real](cauchy_seq(a, b), n) + partial[Real](cauchy_seq(a, bb), n)","proof":["partial[Real](cauchy_seq(a, b), n) + partial[Real](cauchy_seq(a, bb), n) = partial[Real](add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(a, bb)), n)"]}
{"goal":"partial_cauchy_add_right","proof":["partial[Real](cauchy_seq(a, b), n) + partial[Real](cauchy_seq(a, bb), n) != partial[Real](add_fn[Nat, Real](cauchy_seq(a, b), cauchy_seq(a, bb)), n)"]}
{"goal":"cauchy_seq(mul_fn[Nat, Real](c, a), b)(k) = cauchy_product(mul_fn[Nat, Real](c, a), b, k)","proof":["cauchy_seq(mul_fn[Nat, Real](c, a), b, k) = cauchy_product(mul_fn[Nat, Real](c, a), b, k)"]}
{"goal":"cauchy_product(mul_fn[Nat, Real](c, a), b, k) = c * cauchy_product(a, b, k)","proof":["c * cauchy_product(a, b, k) = cauchy_product(mul_fn[Nat, Real](c, a), b, k)"]}
{"goal":"cauchy_seq(a, b)(k) = cauchy_product(a, b, k)","proof":["cauchy_seq(a, b, k) = cauchy_product(a, b, k)"]}
{"goal":"cauchy_seq(mul_fn[Nat, Real](c, a), b)(k) = c * cauchy_seq(a, b)(k)","proof":[]}
{"goal":"mul_fn[Nat, Real](c, cauchy_seq(a, b))(k) = c * cauchy_seq(a, b)(k)","proof":["c * cauchy_seq(a, b, k) = mul_fn(c, cauchy_seq(a, b), k)"]}
{"goal":"cauchy_seq(mul_fn[Nat, Real](c, a), b) = mul_fn[Nat, Real](c, cauchy_seq(a, b))","proof":["let s0: Nat satisfy { mul_fn(c, cauchy_seq(a, b), s0) != cauchy_seq(mul_fn[Nat, Real](c, a), b, s0) }","c * cauchy_seq(a, b, s0) = mul_fn(c, cauchy_seq(a, b), s0)","c * cauchy_product(a, b, s0) = cauchy_product(mul_fn[Nat, Real](c, a), b, s0)","let s1: Nat -> Real satisfy { true }","let s2: Nat satisfy { true }","cauchy_seq(mul_fn[Nat, Real](c, a), b, s0) = cauchy_product(mul_fn[Nat, Real](c, a), b, s0)","cauchy_seq(s1, s1, s2) = cauchy_product(s1, s1, s2)","cauchy_seq = cauchy_product"]}
{"goal":"partial[Real](cauchy_seq(mul_fn[Nat, Real](c, a), b), n) = partial[Real](mul_fn[Nat, Real](c, cauchy_seq(a, b)), n)","proof":["mul_fn[Nat, Real](c, cauchy_seq(a, b)) != cauchy_seq(mul_fn[Nat, Real](c, a), b)"]}
{"goal":"partial[Real](mul_fn[Nat, Real](c, cauchy_seq(a, b)), n) = c * partial[Real](cauchy_seq(a, b), n)","proof":["c * partial[Real](cauchy_seq(a, b), n) = partial[Real](mul_fn[Nat, Real](c, cauchy_seq(a, b)), n)"]}
{"goal":"partial_cauchy_scalar_left","proof":["c * partial[Real](cauchy_seq(a, b), n) != partial[Real](mul_fn[Nat, Real](c, cauchy_seq(a, b)), n)"]}
{"goal":"cauchy_seq(a, mul_fn[Nat, Real](c, b))(k) = cauchy_product(a, mul_fn[Nat, Real](c, b), k)","proof":["cauchy_seq(a, mul_fn[Nat, Real](c, b), k) = cauchy_product(a, mul_fn[Nat, Real](c, b), k)"]}
{"goal":"cauchy_product(a, mul_fn[Nat, Real](c, b), k) = c * cauchy_product(a, b, k)","proof":["c * cauchy_product(a, b, k) = cauchy_product(a, mul_fn[Nat, Real](c, b), k)"]}
{"goal":"cauchy_seq(a, b)(k) = cauchy_product(a, b, k)","proof":["cauchy_seq(a, b, k) = cauchy_product(a, b, k)"]}
{"goal":"cauchy_seq(a, mul_fn[Nat, Real](c, b))(k) = c * cauchy_seq(a, b)(k)","proof":[]}
{"goal":"mul_fn[Nat, Real](c, cauchy_seq(a, b))(k) = c * cauchy_seq(a, b)(k)","proof":["c * cauchy_seq(a, b, k) = mul_fn(c, cauchy_seq(a, b), k)"]}
{"goal":"cauchy_seq(a, mul_fn[Nat, Real](c, b)) = mul_fn[Nat, Real](c, cauchy_seq(a, b))","proof":["let s0: Nat satisfy { mul_fn(c, cauchy_seq(a, b), s0) != cauchy_seq(a, mul_fn[Nat, Real](c, b), s0) }","c * cauchy_seq(a, b, s0) = mul_fn(c, cauchy_seq(a, b), s0)","c * cauchy_product(a, b, s0) = cauchy_product(a, mul_fn[Nat, Real](c, b), s0)","let s1: Nat -> Real satisfy { true }","let s2: Nat satisfy { true }","cauchy_seq(a, mul_fn[Nat, Real](c, b), s0) = cauchy_product(a, mul_fn[Nat, Real](c, b), s0)","cauchy_seq(s1, s1, s2) = cauchy_product(s1, s1, s2)","cauchy_seq = cauchy_product"]}
{"goal":"partial[Real](cauchy_seq(a, mul_fn[Nat, Real](c, b)), n) = partial[Real](mul_fn[Nat, Real](c, cauchy_seq(a, b)), n)","proof":["mul_fn[Nat, Real](c, cauchy_seq(a, b)) != cauchy_seq(a, mul_fn[Nat, Real](c, b))"]}
{"goal":"partial[Real](mul_fn[Nat, Real](c, cauchy_seq(a, b)), n) = c * partial[Real](cauchy_seq(a, b), n)","proof":["c * partial[Real](cauchy_seq(a, b), n) = partial[Real](mul_fn[Nat, Real](c, cauchy_seq(a, b)), n)"]}
{"goal":"partial_cauchy_scalar_right","proof":["c * partial[Real](cauchy_seq(a, b), n) != partial[Real](mul_fn[Nat, Real](c, cauchy_seq(a, b)), n)"]}
