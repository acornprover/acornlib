dependencies: 4653852780358955174
content: 17952804678019332515
blocks:
  add_assoc:
    list:
    - List.add
    - List.induction
  add_contains_left:
    list:
    - List.add
    - List.contains
    - List.induction
  add_contains_right:
    list:
    - List.add
    - List.contains
    - List.induction
    - nil_add
  add_length:
    list:
    - List.add
    - List.induction
    - List.length
    - nil_add
    nat.nat_base:
    - add_suc_left
    - add_zero_left
  add_nil:
    list:
    - List.add
    - List.induction
  add_to_nil:
    list:
    - List.length
    - add_length
    - length_zero_imp_nil
    nat.nat_base:
    - add_to_zero
  append_not_nil:
    list:
    - List.append
    - List.cons
    - List.singleton
    - add_to_nil
  cons_duplicate_inequality:
    list:
    - List.count
    nat.nat_base:
    - Nat.gte
    - Nat.lte
    - add_comm
    - cross_sum_lte
    - lte_trans
  drop_cancels_add:
    list:
    - List.add
    - List.drop
    - List.induction
    - List.length
    - nil_add
    - tail_cancels_cons
  drop_last_all:
    list:
    - List.drop_last
    - List.induction
    - List.length
    nat.nat_base:
    - lt_suc
  drop_last_cancels_add:
    list:
    - List.add
    - List.drop_last
    - List.induction
    - add_length
    - nil_add
    nat.nat_base:
    - Nat.lte
    - add_cancels_right
    - add_comm
    - lte_imp_not_lt
  drop_last_zero:
    list:
    - List.drop_last
    - List.induction
    nat.nat_base:
    - not_lt_zero
  drop_one:
    list:
    - List.drop
    - drop_zero
    nat.nat_base:
    - Nat.1
  drop_twice:
    list:
    - List.drop
    - drop_zero
    nat.nat_base:
    - Nat.add
    - add_comm
    - add_suc_left
  drop_zero:
    list:
    - List.drop
  filter_contained_by_and:
    list:
    - List.contains
    - List.filter
  filter_contains_and:
    list:
    - List.contains
    - List.filter
  filter_equivalent_to_and:
    list:
    - filter_contained_by_and
    - filter_contains_and
  filter_only_removes_elems:
    list:
    - List.filter
    - List.induction
    - List.length
    nat.nat_base:
    - lt_cancel_suc
    - lt_imp_lt_suc
    - lt_or_lte
    - lte_imp_not_lt
    - lte_ref
  length_range:
    list:
    - List.append
    - List.length
    - List.singleton
    - Nat.range
    - add_length
    nat.nat_base:
    - Nat.1
    - Nat.induction
    - add_comm
    - add_one_left
  length_zero_imp_nil:
    list:
    - List.length
    - List.new
    nat.nat_base:
    - Nat.suc
  list_contains_implies_count_geq_one:
    list:
    - List.contains
    - List.count
    nat.nat_base:
    - Nat.gte
    - Nat.lte
  list_has_max:
    list:
    - List.contains
    - List.induction
    - max_list
    nat.nat_base:
    - Nat.gte
    - lte_trans
    order:
    - LinearOrder.totality
    - PartialOrder.gte
    - max_imp_gte
  list_not_contains_impl_count_zero:
    list:
    - List.contains
    - List.count
  map_add:
    list:
    - List.add
    - List.induction
    - map
  map_append:
    list:
    - List.append
    - List.singleton
    - map
    - map_add
    - nil_add
  map_contains:
    list:
    - List.contains
    - map
  map_length:
    list:
    - List.induction
    - List.length
    - map
  map_map:
    list:
    - List.induction
    - map
    util:
    - compose
  map_singleton:
    list:
    - List.singleton
    - map
  nil_add:
    list:
    - List.add
  no_list_contains_nat:
    list:
    - list_has_max
    nat.nat_base:
    - lt_suc
    - lte_imp_not_lt
    - lte_ref
  not_unique_implies_duplicate:
    list:
    - List.count
    - List.induction
    - List.is_unique
    - List.unique
    - cons_duplicate_inequality
    - list_contains_implies_count_geq_one
    - unique_implies_no_duplicate
    nat.nat_base:
    - Nat.gt
    - Nat.gte
    - Nat.lt
    - add_one_left
    - lt_and_lte
    - lt_suc
    - lte_imp_not_lt
    - lte_ref
  pigeonhole_map:
    list:
    - List.is_unique
    - map_length
    - pigeonhole_unique_map
    nat.nat_base:
    - Nat.gt
    - lt_not_ref
  pigeonhole_unique_map:
    list:
    - List.count
    - List.induction
    - List.is_unique
    - List.unique
    - list_contains_implies_count_geq_one
    - map
    - map_contains
    - not_unique_implies_duplicate
    - unique_implies_no_duplicate
    - unique_implies_tail_unique
    nat.nat_base:
    - Nat.gt
    - Nat.gte
    - Nat.lt
    - add_one_left
    - lt_suc
    - lte_imp_not_lt
  range_add_until:
    list:
    - List.append
    - Nat.range
    - Nat.until
    - add_assoc
    - length_range
    nat.nat_base:
    - Nat.add
    - Nat.induction
    - Nat.lte
    - add_suc_right
  remove_element_in_unique_equals_length_minus_one:
    list:
    - List.contains
    - List.induction
    - List.length
    - List.remove_elem
    - List.unique
    - remove_element_not_in_list
    - unique_preserves_contains
    nat.nat_base:
    - add_one_right
  remove_element_not_in_list:
    list:
    - List.contains
    - List.remove_elem
  remove_element_removes_element:
    list:
    - List.contains
    - List.remove_elem
    - remove_element_not_in_list
  remove_element_removes_no_other_elements:
    list:
    - List.contains
    - List.remove_elem
    - remove_element_not_in_list
  singleton_unique:
    list:
    - List.contains
    - List.is_unique
    - List.singleton
    - List.unique
  sum_add:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    add_monoid:
    - AddMonoid.add_identity_right
    add_semigroup:
    - AddSemigroup.add_associative
    list:
    - List.add
    - List.induction
    - sum
  sum_append:
    add_monoid:
    - AddMonoid.add_identity_right
    list:
    - List.append
    - List.singleton
    - sum
    - sum_add
  tail_cancels_cons:
    list:
    - List.tail
  unique_comm_remove_elem:
    list:
    - List.remove_elem
    - List.unique
    - remove_element_removes_no_other_elements
  unique_implies_no_duplicate:
    list:
    - List.cons
    - List.count
    - List.is_unique
    - List.length
    - List.unique
    - list_not_contains_impl_count_zero
    - unique_indemp
    - unique_length
    nat.nat_base:
    - Nat.lt
    - add_comm
    - add_zero_left
    - lt_or_lte
    - lt_suc
    - lte_and_lt
    - not_lt_zero
  unique_implies_tail_unique:
    list:
    - List.cons
    - List.is_unique
    - List.length
    - List.unique
    - unique_length
    nat.nat_base:
    - Nat.lt
    - lt_suc
    - lte_and_lt
  unique_indemp:
    list:
    - List.induction
    - List.unique
    - unique_preserves_contains
  unique_is_smallest_containing_list:
    list:
    - List.contains
    - List.length
    - List.unique
    - remove_element_in_unique_equals_length_minus_one
    - remove_element_not_in_list
    - remove_element_removes_element
    - remove_element_removes_no_other_elements
    - unique_comm_remove_elem
    - unique_length
    nat.nat_base:
    - add_comm
    - add_one_left
    - add_one_right
    - lt_cancel_suc
    - lt_or_lte
    - lte_imp_not_lt
    - lte_trans
    - not_lt_zero
  unique_len_smaller_implies_duplicate:
    list:
    - List.count
    - List.length
    - List.unique
    - list_contains_implies_count_geq_one
    nat.nat_base:
    - Nat.gt
    - Nat.gte
    - Nat.lt
    - add_one_left
    - lt_and_lte
    - lt_cancel_suc
    - lt_not_ref
    - lt_or_lte
    - lt_suc
    - lte_and_lt
  unique_length:
    list:
    - List.induction
    - List.length
    - List.unique
    nat.nat_base:
    - Nat.lt
    - lt_imp_lte_suc
    - lt_suc
    - lte_and_lt
    - lte_ref
  unique_list_is_unique:
    list:
    - List.is_unique
    - unique_indemp
  unique_preserves_contains:
    list:
    - List.contains
    - List.unique
  until_self:
    list:
    - Nat.until
    - add_nil
    - length_range
  until_suc:
    list:
    - List.append
    - Nat.range
    - Nat.until
    - length_range
  upto_self:
    list:
    - Nat.upto
    - until_suc
  zero_until:
    list:
    - Nat.until
  zero_upto:
    list:
    - Nat.upto
    - zero_until
