dependencies: 14323120415759408497
content: 5880295560111100006
blocks:
  '16':
    rat.rat_base:
    - denom_one_is_reduced
  Rat.AddCommSemigroup:
    rat.rat_base:
    - add_comm
  Rat.AddGroup:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    rat.rat_base:
    - add_inv_cancels_left
  Rat.AddMonoid:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    rat.rat_base:
    - add_zero_left
  Rat.AddSemigroup:
    rat.rat_base:
    - add_assoc
  abs_mul_abs:
    rat.rat_base:
    - abs_non_neg
    - abs_non_pos
    - mul_comm
    - neg_abs
    - neg_mul
    - not_pos_and_neg
  abs_non_neg:
    rat.rat_base:
    - Rat.abs
  abs_non_pos:
    rat.rat_base:
    - Rat.abs
    - single_trichotomy
    - sub_self
    - zero_minus
  abs_zero_imp_zero:
    rat.rat_base:
    - Rat.abs
    - abs_non_neg
    - add_comm
    - add_inv_cancels_left
    - minus_cancels_plus
    - sub_zero
  add_assoc:
    int:
    - mul_assoc
    - mul_zero_imp_factor_zero
    int.int_base:
    - add_assoc
    - mul_comm
    rat.rat_base:
    - add_reduced_same_denom
    - denom_nonzero
    - reduce_cancels_right
    - reduce_idempotent
  add_cancels_sub:
    add_group:
    - AddGroup.sub
    - inverse_left
    add_monoid:
    - AddMonoid.add_identity_right
    add_semigroup:
    - AddSemigroup.add_associative
  add_comm:
    int.int_base:
    - add_comm
    - mul_comm
    rat.rat_base:
    - Rat.add
  add_half_half:
    rat.rat_base:
    - Rat.div
    - distrib_right
    - half_plus_half
    - times_two
  add_int_eq_int_add:
    int.int_base:
    - add_comm
    - add_zero_left
    - mul_one_left
    - mul_one_right
    rat.rat_base:
    - Rat.0
    - Rat.add
    - Rat.from_int
    - Rat.new
    - add_comm
    - add_zero_left
    - from_int_denom
    - from_int_num
    - zero_denom
  add_inv_cancels_left:
    rat.rat_base:
    - add_comm
    - add_inv_cancels_right
  add_inv_cancels_right:
    add_group:
    - AddGroup.sub
    int.int_base:
    - add_comm
    - mul_neg_left
    - sub_self
    rat.rat_base:
    - Rat.add
    - add_comm
    - neg_denom
    - neg_num
    - reduce_zero_num
    ring:
    - mul_neg_left
  add_neg_lt:
    rat.rat_base:
    - Rat.lt
    - neg_neg_is_pos
    - sub_add_quasi_cancel
  add_pos_pos:
    int:
    - mul_pos_pos
    int.int_base:
    - add_pos_nonneg
    - pos_is_not_neg
    rat.rat_base:
    - Rat.add
    - Rat.is_positive
    - denom_positive
    - reduce_pos_pos
  add_reduce_right:
    int:
    - mul_assoc
    int.int_base:
    - Int.add
    - mul_comm
    - mul_distrib_right
    - mul_zero_right
    rat.rat_base:
    - Rat.add
    - reduce_cancels_right
    - unreduce_right
  add_reduced:
    int:
    - mul_assoc
    - mul_zero_imp_factor_zero
    int.int_base:
    - add_comm
    - mul_comm
    - mul_distrib_right
    - mul_zero_right
    rat.rat_base:
    - add_reduce_right
    - reduce_cancels_right
    - unreduce_right
  add_reduced_same_denom:
    int.int_base:
    - mul_comm
    - mul_distrib_right
    rat.rat_base:
    - add_reduced
    - add_zero_left
    - reduce
    - reduce_cancels_right
  add_zero_left:
    int.int_base:
    - add_comm
    - mul_one_left
    - mul_one_right
    rat.rat_base:
    - Rat.add
    - Rat.new
    - add_zero_right
    - zero_denom
  add_zero_right:
    int.int_base:
    - add_comm
    - add_zero_right
    - mul_comm
    - mul_one_left
    - mul_one_right
    - mul_zero_left
    rat.rat_base:
    - Rat.0
    - Rat.add
    - Rat.from_int
    - from_int_num
    - reduce_idempotent
    - zero_denom
  adding_lts:
    rat.rat_base:
    - add_comm
    - lt_add_right
    - lt_trans
  bounds_imp_close:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    add_group:
    - AddGroup.sub
    rat.rat_base:
    - Rat.abs
    - Rat.gt
    - Rat.is_close
    - abs_non_neg
    - add_cancels_sub
    - lt_cancel_add_right
    - minus_cancels_plus
    - neg_sub
  cancel_positivity_left:
    rat.rat_base:
    - mul_pos_neg
    - mul_zero_right
    - not_pos_and_neg
    - single_trichotomy
    - sub_self
    - sub_zero
  cancel_positivity_right:
    rat.rat_base:
    - cancel_positivity_left
    - mul_comm
  close_comm:
    rat.rat_base:
    - Rat.is_close
    - neg_abs
    - neg_sub
  close_imp_bounds:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    add_group:
    - AddGroup.sub
    rat.rat_base:
    - Rat.gt
    - Rat.is_close
    - add_cancels_sub
    - close_comm
    - lt_add_right
    - lte_abs
    - lte_lt_trans
    - minus_cancels_plus
  common_denom:
    int:
    - mul_zero_imp_factor_zero
    int.int_base:
    - mul_comm
    rat.rat_base:
    - denom_nonzero
    - reduce_cancels_right
    - reduce_idempotent
  cross_eq_imp_eq:
    int:
    - Int.abs
    - Int.divides
    - div_imp_div_abs
    - euclids_lemma
    - gcd_comm
    - member_abs_pos
    - mul_cancel_right
    int.int_base:
    - zero_not_pos
    nat.nat_base:
    - divides_symm
    rat.rat_base:
    - Rat.constraint
    - Rat.new
    - cross_equals
    - denom_positive
    - is_reduced
  cross_eq_imp_reduce_eq:
    rat.rat_base:
    - cross_eq_imp_eq
    - cross_equals
    - cross_equals_trans
    - denom_nonzero
    - reduce
  cross_equals_trans:
    int:
    - mul_assoc
    - mul_cancel_right
    int.int_base:
    - mul_comm
    rat.rat_base:
    - cross_equals
  denom_nonzero:
    int:
    - Int.gt
    - lt_not_ref
    rat.rat_base:
    - Rat.constraint
    - is_reduced
  denom_one_is_reduced:
    int:
    - Int.gt
    - gcd_one_right
    - zero_lt_pos
    int.int_base:
    - one_pos
    rat.rat_base:
    - is_reduced
  denom_positive:
    int:
    - Int.gt
    - Int.lt
    - exp_one
    int.int_base:
    - mul_one_left
    - sub_zero_right
    rat.rat_base:
    - Rat.constraint
    - is_reduced
  distrib_left:
    int.int_base:
    - mul_distrib_left
    rat.rat_base:
    - add_reduced_same_denom
    - common_denom
    - mul_reduced
    - reduce_idempotent
  distrib_right:
    rat.rat_base:
    - distrib_left
    - mul_comm
  div_from_int:
    int.int_base:
    - mul_comm
    - mul_one_left
    - mul_one_right
    rat.rat_base:
    - Rat.div
    - Rat.new
    - Rat.reciprocal
    - from_int_denom
    - from_int_num
    - mul_comm
    - mul_one_right
    - mul_reduced
    - mul_reduced_int_left
    - reduce_idempotent
    - reduce_one_one
  floor:
    rat.rat_base:
    - floor_exists
  floor_exists:
    int:
    - division_theorem
    - lt_add_left
    - lte_add_left
    int.int_base:
    - mul_comm
    - mul_distrib_right
    - mul_one_left
    rat.rat_base:
    - Rat.0
    - Rat.from_int
    - Rat.gte
    - Rat.is_positive
    - add_int_eq_int_add
    - add_zero_right
    - denom_positive
    - div_from_int
    - from_int_num
    - lt_from_int_mul_denom
    - lte_div_pos
    - lte_from_int
    - mul_div_cancels
    - mul_int_eq_int_mul
    - neg_denom
    - not_lt_self
    - pos_imp_zero_lt
  from_int_cancel:
    int.int_base:
    - sub_nat_parts
    rat.rat_base:
    - from_int_num
  from_int_denom:
    rat.rat_base:
    - Rat.denom
    - Rat.from_int
    - denom_one_is_reduced
  from_int_num:
    rat.rat_base:
    - Rat.from_int
    - Rat.num
    - denom_one_is_reduced
  from_nat_nonneg:
    int.int_base:
    - Int.0
    - abs_neg_nat
    - neg_from_nat
    - neg_nat_zero
    - neg_neg
    - neg_zero
    nat.nat_base:
    - add_to_zero
    - bounded_sub
    rat.rat_base:
    - Rat.0
    - Rat.from_int
    - Rat.from_nat
    - Rat.gt
    - Rat.lte
    - nat_lt_imp_rat_lt
  gt_cancel_pos_mul_left:
    rat.rat_base:
    - Rat.gt
    - lt_cancel_pos_mul_left
    - not_lt_both_ways
    - trichotomy
  gt_cancel_pos_mul_right:
    rat.rat_base:
    - Rat.gt
    - lt_mul_pos
    - not_lt_both_ways
    - trichotomy
  gt_from_int:
    int:
    - Int.gt
    rat.rat_base:
    - Rat.gt
    - lt_from_int
  gt_imp_rat_between:
    rat.rat_base:
    - Rat.gt
    - lt_imp_rat_between
  gt_minus_pos:
    add_group:
    - AddGroup.sub
    - inverse_inverse
    rat.rat_base:
    - Rat.gt
    - Rat.lt
    - sub_add_quasi_cancel
  gte_from_int:
    int:
    - Int.gte
    rat.rat_base:
    - Rat.gte
    - lte_from_int
  gte_some_int:
    rat.rat_base:
    - Rat.gte
    - floor
  half_is_pos:
    rat.rat_base:
    - pos_reciprocal
    - two_is_pos
  half_lt_one:
    rat.rat_base:
    - Rat.div
    - Rat.gt
    - add_comm
    - add_half_half
    - half_pos
    - lt_add_pos
    - mul_one_left
    - one_is_pos
  half_plus_half:
    rat.rat_base:
    - distrib_right
    - mul_cancels_div
    - mul_cancels_right
    - mul_comm
    - times_two
    - two_neq_zero
  half_pos:
    rat.rat_base:
    - Rat.div
    - half_is_pos
    - mul_pos_pos
  inverses_eq:
    rat.rat_base:
    - Rat.div
    - mul_assoc
    - mul_cancels_div
    - mul_cancels_right
    - mul_comm
  lower_squared:
    rat.rat_base:
    - Rat.gt
    - Rat.lte
    - half_is_pos
    - half_lt_one
    - lt_mul_pos
    - lt_trans
    - mul_lt_lt
    - mul_one_left
    - mul_one_right
    - mul_pos_pos
    - trichotomy
  lt_add_pos:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    add_group:
    - AddGroup.sub
    - inverse_left
    add_monoid:
    - AddMonoid.add_identity_right
    add_semigroup:
    - AddSemigroup.add_associative
    rat.rat_base:
    - Rat.lt
  lt_add_right:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    add_group:
    - AddGroup.inverse_right
    - AddGroup.sub
    - inverse_add
    add_monoid:
    - AddMonoid.add_identity_right
    add_semigroup:
    - AddSemigroup.add_associative
    rat.rat_base:
    - Rat.lt
  lt_both_pos:
    rat.rat_base:
    - Rat.gt
    - Rat.lte
    - lt_lte_trans
    - lt_trans
    - smaller_positive
    - trichotomy
  lt_cancel_add_right:
    rat.rat_base:
    - Rat.gt
    - lt_add_right
    - not_lt_both_ways
    - trichotomy
  lt_cancel_pos_mul_left:
    rat.rat_base:
    - Rat.gt
    - lt_cancel_pos_mul_right
    - mul_comm
    - not_lt_both_ways
  lt_cancel_pos_mul_right:
    rat.rat_base:
    - Rat.gt
    - lt_mul_pos
    - not_lt_both_ways
    - trichotomy
  lt_div_pos:
    rat.rat_base:
    - Rat.div
    - Rat.lt
    - lt_mul_pos
    - pos_reciprocal
  lt_from_int:
    int:
    - Int.lt
    rat.rat_base:
    - Rat.is_positive
    - Rat.lt
    - from_int_num
    - sub_from_int
  lt_from_int_mul_denom:
    rat.rat_base:
    - Rat.is_positive
    - denom_positive
    - div_from_int
    - from_int_num
    - lt_div_pos
    - lt_from_int
    - mul_div_cancels
    - mul_int_eq_int_mul
    - not_lt_self
    - pos_imp_zero_lt
  lt_imp_rat_between:
    rat.rat_base:
    - Rat.div
    - Rat.lt
    - add_comm
    - distrib_right
    - half_plus_half
    - lt_add_right
    - lt_div_pos
    - two_is_pos
  lt_lte_trans:
    rat.rat_base:
    - Rat.lte
    - lt_trans
  lt_mul_pos:
    add_group:
    - AddGroup.sub
    rat.rat_base:
    - Rat.gt
    - Rat.lt
    - distrib_right
    - gt_minus_pos
    - mul_pos_pos
    - neg_mul
    - pos_imp_zero_lt
    - sub_self
    - sub_zero
  lt_neg:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    add_group:
    - AddGroup.sub
    - inverse_inverse
    rat.rat_base:
    - Rat.is_positive
    - Rat.lt
  lt_pos_reciprocal:
    int.int_base:
    - zero_not_pos
    rat.rat_base:
    - Rat.0
    - Rat.from_int
    - Rat.gt
    - Rat.is_positive
    - Rat.lte
    - from_int_num
    - lt_zero_imp_neg
    - mul_inv_cancels_left
    - mul_lte_lt
    - not_lt_both_ways
    - not_pos_and_neg
    - pos_reciprocal
    - trichotomy
  lt_rhs_div_pos:
    int.int_base:
    - zero_not_pos
    rat.rat_base:
    - Rat.0
    - Rat.from_int
    - Rat.is_positive
    - from_int_num
    - lt_mul_pos
    - mul_cancels_div
  lt_trans:
    add_group:
    - AddGroup.sub
    add_semigroup:
    - AddSemigroup.add_associative
    rat.rat_base:
    - Rat.lt
    - add_cancels_sub
    - add_pos_pos
  lt_zero_imp_neg:
    add_group:
    - inverse_inverse
    rat.rat_base:
    - Rat.lt
    - neg_pos_is_neg
    - zero_minus
  lte_abs:
    rat.rat_base:
    - Rat.abs
    - Rat.lte
    - lte_trans
    - neg_imp_lt_zero
    - zero_lte_abs
  lte_div_pos:
    rat.rat_base:
    - Rat.div
    - lte_mul_pos
    - pos_reciprocal
  lte_from_int:
    int:
    - Int.lte
    rat.rat_base:
    - Rat.lte
    - lt_from_int
  lte_from_int_mul_denom:
    int:
    - Int.lte
    int.int_base:
    - mul_one_right
    - one_neq_zero
    rat.rat_base:
    - Rat.lte
    - cross_eq_imp_eq
    - cross_equals
    - denom_nonzero
    - from_int_denom
    - from_int_num
    - lt_from_int_mul_denom
  lte_lt_trans:
    rat.rat_base:
    - Rat.lte
    - lt_trans
  lte_mul_pos:
    rat.rat_base:
    - Rat.lte
    - lt_mul_pos
  lte_trans:
    rat.rat_base:
    - Rat.gt
    - Rat.lte
    - lt_lte_trans
    - not_lt_both_ways
    - trichotomy
  minus_cancels_plus:
    add_group:
    - AddGroup.inverse_right
    - AddGroup.sub
    add_monoid:
    - AddMonoid.add_identity_right
    add_semigroup:
    - AddSemigroup.add_associative
  mul_assoc:
    int:
    - mul_assoc
    rat.rat_base:
    - Rat.mul
    - mul_reduced
    - reduce_idempotent
  mul_cancels_div:
    rat.rat_base:
    - Rat.div
    - mul_assoc
    - mul_comm
    - mul_inv_cancels_left
    - mul_one_left
  mul_cancels_div_left:
    rat.rat_base:
    - mul_cancels_div
    - mul_comm
  mul_cancels_right:
    rat.rat_base:
    - mul_assoc
    - mul_comm
    - mul_inv_cancels_right
    - mul_one_left
  mul_comm:
    int.int_base:
    - mul_comm
    rat.rat_base:
    - Rat.mul
  mul_denom:
    rat.rat_base:
    - denom_nonzero
    - div_from_int
    - from_int_num
    - mul_cancels_div
    - neg_denom
    - zero_num
  mul_div_cancels:
    rat.rat_base:
    - Rat.div
    - mul_assoc
    - mul_comm
    - mul_inv_cancels_right
    - mul_one_left
  mul_int_eq_int_mul:
    int.int_base:
    - add_zero_left
    - mul_comm
    - mul_one_left
    - mul_one_right
    rat.rat_base:
    - Rat.0
    - Rat.add
    - Rat.from_int
    - Rat.mul
    - Rat.new
    - add_zero_left
    - from_int_denom
    - from_int_num
    - mul_comm
    - zero_denom
  mul_int_left:
    int.int_base:
    - mul_comm
    rat.rat_base:
    - mul_comm
    - mul_int_right
  mul_int_left_cancel:
    rat.rat_base:
    - mul_comm
    - mul_int_right_cancel
  mul_int_right:
    int.int_base:
    - mul_comm
    - mul_one_left
    rat.rat_base:
    - Rat.mul
    - Rat.new
    - from_int_denom
    - from_int_num
    - mul_comm
  mul_int_right_cancel:
    int:
    - mul_assoc
    - mul_cancel_left
    - mul_cancel_right
    int.int_base:
    - mul_comm
    rat.rat_base:
    - cross_eq_imp_eq
    - cross_equals
    - denom_nonzero
    - mul_int_right
    - reduce_eq_imp_cross_eq
  mul_inv_cancels_left:
    rat.rat_base:
    - mul_comm
    - mul_inv_cancels_right
  mul_inv_cancels_right:
    int:
    - mul_zero_imp_factor_zero
    int.int_base:
    - mul_comm
    rat.rat_base:
    - Rat.reciprocal
    - denom_nonzero
    - mul_reduced
    - reduce_idempotent
    - reduce_self
    - reduce_zero_num
  mul_lt_lt:
    rat.rat_base:
    - Rat.lt
    - add_cancels_sub
    - add_pos_pos
    - lt_mul_pos
    - lt_trans
    - mul_comm
  mul_lt_lte:
    rat.rat_base:
    - Rat.lt
    - Rat.lte
    - add_cancels_sub
    - add_pos_pos
    - lt_mul_pos
    - lte_mul_pos
    - mul_comm
    - mul_lt_lt
  mul_lte_lt:
    rat.rat_base:
    - Rat.lte
    - lte_mul_pos
    - mul_comm
    - mul_lt_lt
    - mul_lt_lte
    - pos_lte
  mul_neg_neg:
    int.int_base:
    - neg_neg
    rat.rat_base:
    - Rat.is_negative
    - Rat.is_positive
    - Rat.lt
    - Rat.neg
    - Rat.new
    - mul_comm
    - mul_pos_neg
    - neg_denom
    - neg_imp_lt_zero
    - neg_mul
    - neg_neg_is_pos
    - neg_num
    - neg_pos_is_neg
    - zero_minus
  mul_neg_one_left:
    rat.rat_base:
    - mul_comm
    - mul_neg_one_right
  mul_neg_one_right:
    int.int_base:
    - mul_neg_right
    - mul_one_right
    rat.rat_base:
    - Rat.mul
    - Rat.neg
    - Rat.new
    - from_int_denom
    - from_int_num
    - neg_denom
    - neg_num
    - rat_neg_one
    - reduce_idempotent
  mul_neg_pos:
    rat.rat_base:
    - Rat.lt
    - lt_zero_imp_neg
    - mul_pos_pos
    - neg_imp_lt_zero
    - neg_mul
    - zero_minus
  mul_non_neg:
    rat.rat_base:
    - Rat.is_positive
    - mul_pos_pos
    - mul_zero_right
    - neg_imp_lt_zero
    - neg_mul
    - neg_neg_is_pos
    - neg_sub
    - not_lt_both_ways
    - not_pos_and_neg
    - pos_imp_zero_lt
    - single_trichotomy
    - sub_zero
  mul_one_left:
    rat.rat_base:
    - mul_comm
    - mul_one_right
  mul_one_right:
    int.int_base:
    - mul_one_left
    rat.rat_base:
    - Rat.1
    - Rat.mul
    - Rat.new
    - from_int_denom
    - from_int_num
    - mul_comm
    - reduce_idempotent
  mul_pos_neg:
    rat.rat_base:
    - mul_comm
    - mul_neg_pos
  mul_pos_pos:
    int:
    - mul_pos_pos
    rat.rat_base:
    - Rat.is_positive
    - Rat.mul
    - denom_positive
    - reduce_pos_pos
  mul_reduced:
    int.int_base:
    - mul_zero_left
    rat.rat_base:
    - mul_comm
    - mul_reduced_degen
    - mul_reduced_nondegen
    - mul_zero_right
    - reduce
  mul_reduced_degen:
    int.int_base:
    - mul_comm
    - mul_zero_left
    rat.rat_base:
    - mul_zero_right
    - reduce
  mul_reduced_int_left:
    int.int_base:
    - mul_comm
    rat.rat_base:
    - mul_comm
    - mul_reduced_int_right
  mul_reduced_int_right:
    int:
    - mul_assoc
    int.int_base:
    - mul_comm
    - mul_zero_left
    rat.rat_base:
    - Rat.0
    - Rat.from_int
    - cross_eq_imp_reduce_eq
    - cross_equals
    - denom_nonzero
    - mul_int_eq_int_mul
    - mul_int_right
    - reduce
    - reduce_eq_imp_cross_eq
    - reduce_idempotent
  mul_reduced_nondegen:
    int:
    - mul_assoc
    - mul_zero_imp_factor_zero
    int.int_base:
    - mul_comm
    - mul_zero_left
    - mul_zero_right
    rat.rat_base:
    - Rat.mul
    - cross_eq_imp_reduce_eq
    - cross_equals
    - unreduce_right
  mul_two_abs:
    rat.rat_base:
    - Rat.abs
    - Rat.lt
    - abs_mul_abs
    - abs_non_neg
    - mul_comm
    - mul_non_neg
    - mul_one_left
    - neg_abs
    - neg_imp_lt_zero
    - not_pos_and_neg
    - zero_minus
  mul_zero_right:
    int.int_base:
    - mul_zero_right
    rat.rat_base:
    - Rat.0
    - Rat.from_int
    - mul_int_right
    - reduce_zero_num
  nat_lt_imp_rat_lt:
    int:
    - lt_from_nat
    rat.rat_base:
    - Rat.from_nat
    - lt_from_int
  neg_abs:
    rat.rat_base:
    - Rat.abs
    - Rat.new
    - neg_neg_is_pos
    - neg_pos_is_neg
    - neg_sub
    - not_pos_and_neg
    - single_trichotomy
    - sub_zero
    - zero_minus
  neg_denom:
    rat.rat_base:
    - Rat.denom
    - Rat.neg
    - neg_is_reduced
  neg_imp_lt_zero:
    rat.rat_base:
    - Rat.lt
    - neg_neg_is_pos
    - zero_minus
  neg_is_reduced:
    int:
    - gcd
    int.int_base:
    - abs_neg
    rat.rat_base:
    - Rat.constraint
    - is_reduced
  neg_mul:
    rat.rat_base:
    - mul_assoc
    - mul_neg_one_left
  neg_neg_is_pos:
    int.int_base:
    - Int.is_positive
    - neg_neg
    rat.rat_base:
    - Rat.is_negative
    - Rat.is_positive
    - neg_num
  neg_num:
    rat.rat_base:
    - Rat.neg
    - Rat.num
    - neg_is_reduced
  neg_pos_is_neg:
    int.int_base:
    - Int.is_positive
    rat.rat_base:
    - Rat.is_negative
    - Rat.is_positive
    - neg_num
  neg_sub:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    add_group:
    - AddGroup.sub
    - inverse_add
    - inverse_inverse
  no_greatest:
    rat.rat_base:
    - half_is_pos
    - lt_add_pos
  not_lt_both_ways:
    rat.rat_base:
    - lt_trans
    - not_lt_self
  not_lt_self:
    int.int_base:
    - zero_not_pos
    rat.rat_base:
    - Rat.0
    - Rat.from_int
    - Rat.is_positive
    - Rat.lt
    - from_int_num
    - sub_self
  not_pos_and_neg:
    int.int_base:
    - pos_is_not_neg
    rat.rat_base:
    - Rat.is_negative
    - Rat.is_positive
  one_is_pos:
    int.int_base:
    - one_pos
    rat.rat_base:
    - reduce_one_one
    - reduce_pos_pos
  pos_imp_zero_lt:
    rat.rat_base:
    - Rat.lt
    - sub_zero
  pos_inverses_gt:
    rat.rat_base:
    - Rat.gt
    - pos_inverses_lt
  pos_inverses_gte:
    rat.rat_base:
    - Rat.gte
    - pos_inverses_lte
  pos_inverses_lt:
    int.int_base:
    - zero_not_pos
    rat.rat_base:
    - Rat.0
    - Rat.div
    - Rat.from_int
    - Rat.gt
    - Rat.is_positive
    - from_int_num
    - lt_cancel_pos_mul_right
    - lt_mul_pos
    - mul_assoc
    - mul_cancels_div
    - mul_comm
  pos_inverses_lte:
    int.int_base:
    - zero_not_pos
    rat.rat_base:
    - Rat.0
    - Rat.from_int
    - Rat.is_positive
    - Rat.lte
    - from_int_num
    - inverses_eq
    - not_lt_self
    - pos_imp_zero_lt
    - pos_inverses_lt
  pos_lte:
    rat.rat_base:
    - Rat.lt
    - Rat.lte
    - add_cancels_sub
    - add_pos_pos
  pos_reciprocal:
    rat.rat_base:
    - Rat.is_positive
    - Rat.reciprocal
    - denom_positive
    - neg_denom
    - reduce_pos_pos
  rat_neg_one:
    rat.rat_base:
    - Rat.1
    - Rat.from_int
    - Rat.new
    - from_int_denom
    - from_int_num
    - neg_denom
    - neg_num
  recip_eq_one_div:
    rat.rat_base:
    - Rat.div
    - mul_one_left
  reciprocal_inverts:
    rat.rat_base:
    - Rat.div
    - mul_cancels_div
    - mul_comm
    - mul_div_cancels
    - mul_inv_cancels_right
    - mul_one_left
    - mul_zero_right
  reduce:
    int:
    - Int.divides
    - Int.gt
    - Int.lte
    - abs_alt_decomp
    - abs_zero_imp_zero
    - cofactor
    - gcd_comm
    - gcd_div_right
    - gcd_mult_right
    - gcd_nonzero_right
    - is_unit
    - mul_assoc
    - mul_cancel_right
    - nonpos_lte_nonneg
    - one_exp
    - sq_eq_mul
    - unit_sign_is_unit
    int.int_base:
    - Int.1
    - Int.is_negative
    - abs_from_nat
    - abs_zero
    - mul_comm
    - mul_zero_left
    - zero_not_pos
    rat.rat_base:
    - Rat.denom
    - Rat.num
    - cross_equals
    - cross_equals_trans
    - is_reduced
  reduce_cancels_left:
    int.int_base:
    - mul_comm
    - neg_neg
    rat.rat_base:
    - reduce_cancels_right
  reduce_cancels_right:
    int:
    - mul_assoc
    - mul_zero_imp_factor_zero
    int.int_base:
    - mul_comm
    - mul_zero_left
    rat.rat_base:
    - cross_eq_imp_reduce_eq
    - cross_equals
    - reduce
  reduce_eq_imp_cross_eq:
    rat.rat_base:
    - cross_equals
    - cross_equals_trans
    - denom_nonzero
    - reduce
  reduce_idempotent:
    rat.rat_base:
    - cross_eq_imp_eq
    - denom_nonzero
    - reduce
  reduce_one_one:
    rat.rat_base:
    - Rat.1
    - from_int_denom
    - from_int_num
    - reduce_idempotent
  reduce_pos_pos:
    int.int_base:
    - mul_nonneg_nonpos_nonpos
    - mul_nonpos_nonneg_nonpos
    - pos_is_not_neg
    - zero_not_pos
    rat.rat_base:
    - Rat.is_positive
    - denom_positive
    - unreduce_right
  reduce_self:
    int.int_base:
    - mul_comm
    - one_neq_zero
    rat.rat_base:
    - Rat.1
    - Rat.from_int
    - cross_eq_imp_reduce_eq
    - cross_equals
    - reduce_one_one
  reduce_zero_num:
    int.int_base:
    - mul_one_right
    - mul_zero_left
    - one_neq_zero
    rat.rat_base:
    - Rat.0
    - Rat.from_int
    - cross_eq_imp_reduce_eq
    - cross_equals
    - from_int_num
    - reduce
    - reduce_idempotent
    - zero_denom
  single_trichotomy:
    int.int_base:
    - nonzero_pos_or_neg
    rat.rat_base:
    - Rat.is_negative
    - Rat.is_positive
    - reduce_idempotent
    - reduce_zero_num
  smaller_int_reciprocal:
    int.int_base:
    - non_pos_is_neg_abs
    - zero_not_pos
    rat.rat_base:
    - Rat.0
    - Rat.from_int
    - Rat.is_positive
    - Rat.lte
    - floor
    - from_int_num
    - lt_pos_reciprocal
    - pos_lte
    - pos_reciprocal
    - reciprocal_inverts
  smaller_positive:
    rat.rat_base:
    - half_is_pos
    - half_lt_one
    - lt_mul_pos
    - mul_one_left
    - mul_pos_pos
  square_lt_imp_lt:
    rat.rat_base:
    - Rat.gt
    - Rat.gte
    - Rat.lte
    - lt_cancel_pos_mul_left
    - lt_lte_trans
    - lte_lt_trans
    - lte_mul_pos
    - not_lt_self
    - trichotomy
  sub_add:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    add_group:
    - AddGroup.sub
    - inverse_add
    add_semigroup:
    - AddSemigroup.add_associative
  sub_add_quasi_cancel:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    add_group:
    - AddGroup.inverse_right
    - AddGroup.sub
    - inverse_add
    add_semigroup:
    - AddSemigroup.add_associative
    rat.rat_base:
    - distrib_left
    - mul_neg_one_left
    - zero_minus
  sub_distrib:
    add_group:
    - AddGroup.sub
    rat.rat_base:
    - distrib_left
    - mul_comm
    - neg_mul
  sub_from_int:
    add_group:
    - AddGroup.sub
    rat.rat_base:
    - add_int_eq_int_add
    - mul_int_eq_int_mul
    - mul_neg_one_left
    - rat_neg_one
    ring:
    - mul_neg_one_left
  sub_self:
    add_group:
    - AddGroup.inverse_right
    - AddGroup.sub
  sub_zero:
    add_comm_semigroup:
    - AddCommSemigroup.commutative
    add_group:
    - AddGroup.sub
    add_monoid:
    - AddMonoid.add_identity_right
    int.int_base:
    - neg_zero
    rat.rat_base:
    - Rat.0
    - Rat.from_int
    - Rat.neg
    - from_int_num
    - zero_denom
  times_two:
    int:
    - times_two
    int.int_base:
    - mul_one_left
    rat.rat_base:
    - Rat.2
    - add_reduced_same_denom
    - mul_int_left
    - reduce_idempotent
  trichotomy:
    add_monoid:
    - AddMonoid.add_identity_right
    rat.rat_base:
    - Rat.gt
    - Rat.lt
    - add_cancels_sub
    - add_comm
    - neg_imp_lt_zero
    - neg_neg_is_pos
    - neg_sub
    - single_trichotomy
    - zero_minus
  two_is_pos:
    rat.rat_base:
    - add_pos_pos
    - mul_one_right
    - one_is_pos
    - times_two
  two_neq_zero:
    int:
    - one_plus_one
    int.int_base:
    - Int.2
    - abs_from_nat
    - abs_zero
    nat.nat_base:
    - one_plus_two
    - two_neq_zero
    rat.rat_base:
    - Rat.0
    - Rat.2
    - Rat.from_int
    - from_int_num
  unreduce_left:
    int.int_base:
    - mul_comm
    rat.rat_base:
    - unreduce_right
  unreduce_right:
    int:
    - Int.divides
    - euclids_lemma
    - gcd_comm
    - mul_assoc
    - mul_cancel_right
    int.int_base:
    - mul_comm
    rat.rat_base:
    - Rat.constraint
    - cross_equals
    - is_reduced
    - reduce
  zero_denom:
    rat.rat_base:
    - Rat.0
    - Rat.denom
    - denom_one_is_reduced
  zero_lt_imp_pos:
    rat.rat_base:
    - Rat.lt
    - sub_zero
  zero_lte_abs:
    rat.rat_base:
    - Rat.abs
    - Rat.gt
    - Rat.lt
    - Rat.lte
    - abs_mul_abs
    - abs_non_neg
    - abs_non_pos
    - abs_zero_imp_zero
    - mul_one_left
    - neg_abs
    - pos_imp_zero_lt
    - sub_zero
    - trichotomy
    - zero_lt_imp_pos
    - zero_minus
  zero_minus:
    add_group:
    - AddGroup.sub
    add_monoid:
    - AddMonoid.add_identity_right
    rat.rat_base:
    - add_comm
  zero_num:
    rat.rat_base:
    - Rat.0
    - Rat.num
    - denom_one_is_reduced
