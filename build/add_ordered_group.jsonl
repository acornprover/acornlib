{"goal":"a <= b and a != b","proof":["not a < b or a <= b","not a < b or b != a","b != a","a <= b","not a <= b"]}
{"goal":"b <= c and b != c","proof":["not b < c or b <= c","not b < c or c != b","c != b","b <= c","not b <= c"]}
{"goal":"a <= c and a != c","proof":["not lib(util).is_transitive[G](G.lte) or not a <= b or not b <= c or a <= c","not lib(util).is_antisymmetric[G](G.lte) or not b <= a or not a <= b or b = a","not b <= a","not a <= b or a <= c","a <= c","c = a"]}
{"goal":"lt_trans","proof":["not a <= c or a < c or c = a"]}
{"goal":"negative_of_nonnegative","proof":["not lib(util).is_transitive[G](G.lte) or not -a + G.0 <= -a + a or not -a + a <= G.0 or -a + G.0 <= G.0","not G.0 <= a or -a + G.0 <= -a + a","G.0 <= G.0 or G.0 <= G.0","-a + a = G.0","-a + G.0 = -a","not -a + G.0 <= G.0","G.0 <= G.0","-a + G.0 <= -a + a","not -a + G.0 <= -a + a or not -a + a <= G.0","not -a + a <= G.0"]}
{"goal":"negative_of_negative","proof":["not lib(util).is_transitive[G](G.lte) or not G.0 <= -a + a or not -a + a <= -a + G.0 or G.0 <= -a + G.0","not a <= G.0 or -a + a <= -a + G.0","G.0 <= G.0 or G.0 <= G.0","-a + a = G.0","-a + G.0 = -a","not G.0 <= -a + G.0","G.0 <= G.0","-a + a <= -a + G.0","not -a + a <= -a + G.0 or not G.0 <= -a + a","not G.0 <= -a + a"]}
{"goal":"add_inequality","proof":["not lib(util).is_transitive[F](F.lte) or not a + c <= a + d or not a + d <= b + d or a + c <= b + d","not c <= d or a + c <= a + d","not a <= b or a + d <= b + d","not a + d <= b + d or not a + c <= a + d","a + d <= b + d","a + c <= a + d"]}
{"goal":"F.0 <= b + -a","proof":["not --a <= b or --a + -a <= b + -a","--a + -a = F.0","--a = a","not --a + -a <= b + -a","--a <= b","not --a <= b"]}
{"goal":"minus_flips_inequality","proof":["not -a <= -b or not F.0 <= b + -a or -a + F.0 <= -b + (b + -a)","not lib(util).is_transitive[F](F.lte) or not -b + F.0 <= -b + (b + -a) or not -b + (b + -a) <= -a or -b + F.0 <= -a","not F.0 <= b + -a or -b + F.0 <= -b + (b + -a)","-b + (b + -a) = -b + b + -a","-a <= -b or -b <= -a","-a <= -b","-b + b = F.0","-a + F.0 = -a","-b + F.0 = -b","F.0 + -a = -a","not -b + F.0 <= -a","-b + F.0 <= -b + (b + -a)","not -b + F.0 <= -b + (b + -a) or not -b + (b + -a) <= -a","not F.0 <= b + -a or -a + F.0 <= -b + (b + -a)","not -b + (b + -a) <= -a","-a + F.0 <= -b + (b + -a)"]}
