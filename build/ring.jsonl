{"goal":"R.0 + R.0 = R.0","proof":["R.0 + R.0 = R.0"]}
{"goal":"(R.0 + R.0) * a = R.0 * a","proof":["R.0 + R.0 != R.0"]}
{"goal":"mul_zero_left","proof":["R.0 * a + R.0 * a = (R.0 + R.0) * a","R.0 * a + R.0 * a != R.0 + R.0 * a or R.0 * a = R.0","R.0 + R.0 * a = R.0 * a","R.0 * a + R.0 * a != R.0 + R.0 * a","(R.0 + R.0) * a = R.0 + R.0 * a"]}
{"goal":"R.0 + R.0 = R.0","proof":["R.0 + R.0 = R.0"]}
{"goal":"a * (R.0 + R.0) = a * R.0","proof":["R.0 + R.0 != R.0"]}
{"goal":"mul_zero_right","proof":["a * R.0 + a * R.0 = a * (R.0 + R.0)","a * R.0 + a * R.0 != R.0 + a * R.0 or a * R.0 = R.0","R.0 + a * R.0 = a * R.0","a * R.0 + a * R.0 != R.0 + a * R.0","a * (R.0 + R.0) = R.0 + a * R.0"]}
{"goal":"-a * b + a * b = R.0","proof":["a * b + -a * b = (a + -a) * b","-a * b + a * b = a * b + -a * b","a * b + -a * b != R.0","(a + -a) * b != R.0","a + -a = R.0","R.0 * b != R.0","R.0 * b = R.0"]}
{"goal":"(-a + a) * b = R.0","proof":["-a * b + a * b = (-a + a) * b"]}
{"goal":"R.0 * b = R.0","proof":["-a + a = R.0"]}
{"goal":"mul_neg_left","proof":["-(a * b) + a * b != -a * b + a * b or -(a * b) = -a * b","-(a * b) + a * b = R.0","-(a * b) + a * b != -a * b + a * b","-(a * b) + a * b = -a * b + a * b"]}
{"goal":"a * -b + a * b = R.0","proof":["a * b + a * -b = a * (b + -b)","a * -b + a * b = a * b + a * -b","a * b + a * -b != R.0","a * (b + -b) != R.0","b + -b = R.0","a * R.0 != R.0","a * R.0 = R.0"]}
{"goal":"a * (-b + b) = R.0","proof":["a * -b + a * b = a * (-b + b)"]}
{"goal":"a * R.0 = R.0","proof":["-b + b = R.0"]}
{"goal":"mul_neg_right","proof":["-(a * b) + a * b != a * -b + a * b or -(a * b) = a * -b","-(a * b) + a * b = R.0","-(a * b) + a * b != a * -b + a * b","-(a * b) + a * b = a * -b + a * b"]}
{"goal":"-a * -b = -(a * -b)","proof":["-a * -b = -(a * -b)"]}
{"goal":"-a * -b = --(a * b)","proof":["-(a * -b) != --(a * b)","a * -b != -(a * b)","a * -b = -(a * b)"]}
{"goal":"mul_neg_neg","proof":["--(a * b) != a * b","--(a * b) = a * b"]}
{"goal":"-R.1 * a + R.1 * a = R.0","proof":["-R.1 * a = -(R.1 * a)","-(R.1 * a) + R.1 * a != R.0","R.1 * a + -(R.1 * a) = -(R.1 * a) + R.1 * a","R.1 * a + -(R.1 * a) = R.0"]}
{"goal":"(-R.1 + R.1) * a = R.0","proof":["-R.1 * a + R.1 * a = (-R.1 + R.1) * a"]}
{"goal":"R.0 * a = R.0","proof":["-R.1 + R.1 = R.0"]}
{"goal":"mul_neg_one_left","proof":["-R.1 * a = -(R.1 * a)","-(R.1 * a) != -a","R.1 * a != a","R.1 * a = a"]}
{"goal":"a * -R.1 + a * R.1 = R.0","proof":["a * -R.1 = -(a * R.1)","-(a * R.1) + a * R.1 != R.0","a * R.1 + -(a * R.1) = -(a * R.1) + a * R.1","a * R.1 + -(a * R.1) = R.0"]}
{"goal":"a * (-R.1 + R.1) = R.0","proof":["a * -R.1 + a * R.1 = a * (-R.1 + R.1)"]}
{"goal":"a * R.0 = R.0","proof":["-R.1 + R.1 = R.0"]}
{"goal":"mul_neg_one_right","proof":["a * -R.1 = -(a * R.1)","-(a * R.1) != -a","a * R.1 != a","a * R.1 = a"]}
{"goal":"Nat.0.range = List.nil[Nat]","proof":["Nat.0 != Nat.0 or Nat.0.range = List.nil[Nat]"]}
{"goal":"map[Nat, R](List.nil[Nat], a.pow) = List.nil[R]","proof":["List.nil[Nat] != List.nil[Nat] or map[Nat, R](List.nil[Nat], a.pow) = List.nil[R]"]}
{"goal":"sum[R](List.nil[R]) = R.0","proof":["List.nil[R] != List.nil[R] or sum[R](List.nil[R]) = R.0"]}
{"goal":"(a + -R.1) * R.0 = R.0","proof":["(a + -R.1) * R.0 = R.0"]}
{"goal":"a.pow(Nat.0) = R.1","proof":["Nat.0 != Nat.0 or a.pow(Nat.0) = R.1"]}
{"goal":"R.1 + -R.1 = R.0","proof":["R.1 + -R.1 = R.0"]}
{"goal":"f(Nat.0)","proof":["(a + -R.1) * sum[R](map[Nat, R](Nat.0.range, a.pow)) != a.pow(Nat.0) + -R.1 or f(Nat.0)","(a + -R.1) * sum[R](map[Nat, R](Nat.0.range, a.pow)) != a.pow(Nat.0) + -R.1"]}
{"goal":"x.suc.range = x.range.append(x)","proof":["x.suc != x.suc or x.range.append(x) = x.suc.range"]}
{"goal":"map[Nat, R](x.suc.range, a.pow) = map[Nat, R](x.range.append(x), a.pow)","proof":["x.range.append(x) != x.suc.range"]}
{"goal":"map[Nat, R](x.range.append(x), a.pow) = map[Nat, R](x.range, a.pow).append(a.pow(x))","proof":["map[Nat, R](x.range, a.pow).append(a.pow(x)) = map[Nat, R](x.range.append(x), a.pow)"]}
{"goal":"sum[R](map[Nat, R](x.range, a.pow).append(a.pow(x))) = sum[R](map[Nat, R](x.range, a.pow)) + a.pow(x)","proof":["sum[R](map[Nat, R](x.range, a.pow).append(a.pow(x))) = sum[R](map[Nat, R](x.range, a.pow)) + a.pow(x)"]}
{"goal":"(a + -R.1) * sum[R](map[Nat, R](x.suc.range, a.pow)) = (a + -R.1) * (sum[R](map[Nat, R](x.range, a.pow)) + a.pow(x))","proof":[]}
{"goal":"(a + -R.1) * (sum[R](map[Nat, R](x.range, a.pow)) + a.pow(x)) = (a + -R.1) * sum[R](map[Nat, R](x.range, a.pow)) + (a + -R.1) * a.pow(x)","proof":["(a + -R.1) * sum[R](map[Nat, R](x.range, a.pow)) + (a + -R.1) * a.pow(x) = (a + -R.1) * (sum[R](map[Nat, R](x.range, a.pow)) + a.pow(x))"]}
{"goal":"(a + -R.1) * sum[R](map[Nat, R](x.range, a.pow)) + (a + -R.1) * a.pow(x) = a.pow(x) + -R.1 + (a + -R.1) * a.pow(x)","proof":["not f(x) or (a + -R.1) * sum[R](map[Nat, R](x.range, a.pow)) = a.pow(x) + -R.1","(a + -R.1) * sum[R](map[Nat, R](x.range, a.pow)) != a.pow(x) + -R.1","(a + -R.1) * sum[R](map[Nat, R](x.range, a.pow)) = a.pow(x) + -R.1"]}
{"goal":"(a + -R.1) * a.pow(x) = a * a.pow(x) + -R.1 * a.pow(x)","proof":["a * a.pow(x) + -R.1 * a.pow(x) = (a + -R.1) * a.pow(x)"]}
{"goal":"a * a.pow(x) = a.pow(x.suc)","proof":["x.suc != x.suc or a * a.pow(x) = a.pow(x.suc)"]}
{"goal":"-R.1 * a.pow(x) = -a.pow(x)","proof":["-R.1 * a.pow(x) = -a.pow(x)"]}
{"goal":"(a + -R.1) * a.pow(x) = a.pow(x.suc) + -a.pow(x)","proof":[]}
{"goal":"a.pow(x) + -R.1 + (a.pow(x.suc) + -a.pow(x)) = a.pow(x) + -R.1 + a.pow(x.suc) + -a.pow(x)","proof":["a.pow(x) + -R.1 + (a.pow(x.suc) + -a.pow(x)) = a.pow(x) + -R.1 + a.pow(x.suc) + -a.pow(x)"]}
{"goal":"a.pow(x) + -a.pow(x) = R.0","proof":["a.pow(x) + -a.pow(x) = R.0"]}
{"goal":"a.pow(x) + -R.1 + a.pow(x.suc) + -a.pow(x) = -R.1 + a.pow(x.suc)","proof":["-R.1 + (a.pow(x) + (a.pow(x.suc) + -a.pow(x))) = -R.1 + a.pow(x) + (a.pow(x.suc) + -a.pow(x))","a.pow(x.suc) + (-a.pow(x) + a.pow(x)) = a.pow(x.suc) + -a.pow(x) + a.pow(x)","a.pow(x) + (a.pow(x.suc) + -a.pow(x)) = a.pow(x.suc) + -a.pow(x) + a.pow(x)","a.pow(x) + -R.1 = -R.1 + a.pow(x)","a.pow(x) + -a.pow(x) = -a.pow(x) + a.pow(x)","a.pow(x.suc) + R.0 = R.0 + a.pow(x.suc)","R.0 + a * a.pow(x) = a * a.pow(x)"]}
{"goal":"-R.1 + a.pow(x.suc) = a.pow(x.suc) + -R.1","proof":["a.pow(x.suc) + -R.1 = -R.1 + a.pow(x.suc)"]}
{"goal":"(a + -R.1) * sum[R](map[Nat, R](x.suc.range, a.pow)) = a.pow(x.suc) + -R.1","proof":[]}
{"goal":"f(x.suc)","proof":["(a + -R.1) * sum[R](map[Nat, R](x.suc.range, a.pow)) != a.pow(x.suc) + -R.1 or f(x.suc)"]}
{"goal":"f(n)","proof":["let s0: (Nat -> Bool) -> Nat satisfy { forall(x0: Nat -> Bool, x1: Nat) { not x0(Nat.0) or x0(s0(x0)) or x0(x1) } and forall(x2: Nat -> Bool, x3: Nat) { not x2(s0(x2).suc) or not x2(Nat.0) or x2(x3) } }","not f(s0(f)) or f(s0(f).suc)","not f(s0(f).suc) or not f(Nat.0) or f(n)","not f(s0(f).suc)","not f(Nat.0) or f(s0(f)) or f(n)","not f(s0(f))","f(s0(f))"]}
{"goal":"geometric_sum","proof":["not f(n) or (a + -R.1) * sum[R](map[Nat, R](n.range, a.pow)) = a.pow(n) + -R.1"]}
